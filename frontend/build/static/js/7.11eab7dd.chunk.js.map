{"version":3,"sources":["components/sideCarousel/SideCarousel.jsx","views/resetPassword/resetPasswordCaptcha/ResetPasswordCaptcha.jsx","views/resetPassword/resetPasswordConfirmation/ResetPasswordConfirmation.jsx","views/resetPassword/resetPasswordForm/ResetPasswordForm.jsx","views/resetPassword/ResetPassword.jsx"],"names":["messages","primary","secondary","image","SideCarousel","useState","length","numberOfItems","selectedIndex","selectIndex","useEffect","carouselInterval","setInterval","prevIndex","clearInterval","className","onClick","role","map","message","index","key","style","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","ResetPasswordCaptcha","setCurrentView","views","captchaRef","useRef","CONFIRM","onLoadRecaptcha","current","reset","ref","el","size","data-theme","render","sitekey","onloadCallback","verifyCallback","recaptchaToken","to","ResetPasswordConfirmation","FORM","goBackToLogin","setGoBackToLogin","signUpSchema","yup","shape","email","required","FieldSet","name","label","fieldType","children","type","errors","touched","htmlFor","as","ResetPasswordForm","handleSubmit","initialValues","validationSchema","onSubmit","state","RESET_PASSWORD_VIEWS","CAPTCHA","ResetPassword","currentView","src","alt","values"],"mappings":"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","file":"static/js/7.11eab7dd.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport \"./side-carousel.scss\";\n\nconst messages = [\n  {\n    primary:\n      \"We provide friendly reports simplifying your financial aid package and helping you compare across colleges\",\n    secondary: \"Jane Cooper - Director Butler College Prep\",\n    image:\n      \"https://res.cloudinary.com/dgbm9hshy/image/upload/v1564596730/LRM_EXPORT_177119709472004_20190731_110718849_jlfv22.jpg\",\n  },\n  {\n    primary: \"I enjoy building interactive and intuitive user interfaces\",\n    secondary: \"Tony Yu, Software Engineer\",\n    image:\n      \"https://res.cloudinary.com/dgbm9hshy/image/upload/v1566720969/IMG_20190310_152414_807_acakcz.jpg\",\n  },\n  {\n    primary: \"Don't give me any devops tasks\",\n    secondary: \"Johnny Siu, Javascript Engineer\",\n    image:\n      \"https://scontent-sjc3-1.xx.fbcdn.net/v/t31.0-8/22095808_10154654866856650_6342051792776742728_o.jpg?_nc_cat=111&_nc_sid=09cbfe&_nc_ohc=XjSk7v3XQP8AX_CwtWQ&_nc_ht=scontent-sjc3-1.xx&oh=5dd522aea204cec8285241f4d4dae1e7&oe=5F3EE16B\",\n  },\n];\n\nconst SideCarousel = () => {\n  const [numberOfItems] = useState(messages.length);\n  const [selectedIndex, selectIndex] = useState(0);\n\n  function handleLeft() {\n    if (selectedIndex - 1 >= 0) {\n      selectIndex((prevIndex) => (prevIndex -= 1));\n    } else {\n      selectIndex(numberOfItems - 1);\n    }\n  }\n\n  function handleRight() {\n    if (selectedIndex + 1 <= numberOfItems - 1) {\n      selectIndex((prevIndex) => (prevIndex += 1));\n    } else {\n      selectIndex(0);\n    }\n  }\n\n  useEffect(() => {\n    function handleInterval() {\n      selectIndex((prevIndex) => {\n        if (prevIndex + 1 > numberOfItems - 1) {\n          return 0;\n        } else {\n          return (prevIndex += 1);\n        }\n      });\n    }\n    const carouselInterval = setInterval(handleInterval, 10000);\n    return () => {\n      clearInterval(carouselInterval);\n    };\n  }, [selectedIndex, numberOfItems]);\n\n  return (\n    <div className=\"side-carousel\">\n      <div className=\"side-carousel-controls\">\n        <div onClick={handleLeft} role=\"button\">\n          &#60;\n        </div>\n        <div onClick={handleRight} role=\"button\">\n          &#62;\n        </div>\n      </div>\n\n      <div className=\"tilt-messages\">\n        {messages.map((message, index) => {\n          return (\n            <div\n              key={message.secondary}\n              className={`tilt-message-container${\n                index === selectedIndex ? \" visible\" : \"\"\n              }`}\n              style={{\n                backgroundImage: `linear-gradient(rgba(0,0,0,0.1), rgba(0,0,0,0.5)), url(${message.image})`,\n                backgroundPosition: \"center\",\n                backgroundRepeat: \"no-repeat\",\n                backgroundSize: \"cover\",\n              }}\n            >\n              <p className=\"tilt-message-primary\">{message.primary}</p>\n              <p className=\"tilt-message-secondary\">{message.secondary}</p>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default SideCarousel;\n","import React, { useEffect, useRef } from \"react\";\nimport { ReCaptcha } from \"react-recaptcha-google\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./reset-password-recaptcha.scss\";\n\nconst ResetPasswordCaptcha = ({ setCurrentView, views }) => {\n  const captchaRef = useRef(null);\n\n  const { CONFIRM } = views;\n\n  function onLoadRecaptcha() {\n    if (captchaRef.current) {\n      captchaRef.current.reset();\n    }\n  }\n\n  useEffect(() => {\n    onLoadRecaptcha();\n  }, []);\n\n  function verifyCallback(recaptchaToken) {\n    // API for verifying token with server\n    // https://www.google.com/recaptcha/api/siteverify\n    if (recaptchaToken) {\n      setCurrentView(CONFIRM);\n      // TODO: send reset password email\n    } else {\n      captchaRef.current.reset();\n    }\n  }\n\n  return (\n    <div className=\"reset-password-captcha-view\">\n      <div className=\"form-container\">\n        <div className=\"form-header\">\n          <h1>You're not a robot, are you?...</h1>\n          <p>\n            This helps prevent robots (and other nefarious machines) from\n            accessing your Tilt account.\n          </p>\n        </div>\n\n        <div className=\"recaptcha-container\">\n          <ReCaptcha\n            ref={(el) => {\n              captchaRef.current = el;\n            }}\n            size=\"normal\"\n            data-theme=\"dark\"\n            render=\"explicit\"\n            sitekey=\"6Ley1bQZAAAAAAfbuBKAeVO1NM6fNhRUMm1eCPDH\"\n            onloadCallback={onLoadRecaptcha}\n            verifyCallback={verifyCallback}\n          ></ReCaptcha>\n        </div>\n\n        <div className=\"form-footer\">\n          <p>\n            Don't have an account? <Link to=\"/signup\">Get started</Link>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ResetPasswordCaptcha;\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport \"./reset-password-confirmation.scss\";\n\nconst ResetPasswordConfirmation = ({ setCurrentView, views }) => {\n  const { FORM } = views;\n\n  const [goBackToLogin, setGoBackToLogin] = useState(false);\n\n  function handleResend() {\n    setCurrentView(FORM);\n  }\n\n  function handleBack() {\n    setGoBackToLogin(true);\n  }\n\n  return (\n    <div className=\"reset-password-confirmation-view\">\n      <div className=\"form-container\">\n        <div className=\"form-header\">\n          <h1>Thanks, please check your email</h1>\n          <p>Didn't get the email? Check your spam folder or resend.</p>\n        </div>\n        <button onClick={handleResend}>Resend</button>\n        <button className=\"secondary-button\" onClick={handleBack}>\n          Back\n        </button>\n      </div>\n      {goBackToLogin && <Redirect to=\"/login\" />}\n    </div>\n  );\n};\n\nexport default ResetPasswordConfirmation;\n","import React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as yup from \"yup\";\n\nimport \"./reset-password-form.scss\";\n\nconst signUpSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email(\"Invalid email\")\n    .required(\"Please enter your email\"),\n});\n\nconst FieldSet = ({\n  name,\n  label,\n  fieldType,\n  children,\n  type,\n  errors,\n  touched,\n}) => (\n  <fieldset>\n    <label htmlFor={`reset-password-${name}`}>{label}</label>\n    <Field as={fieldType} name={name} type={type}>\n      {children}\n    </Field>\n    {errors[name] && touched[name] && (\n      <span className=\"form-error\">{errors[name]}</span>\n    )}\n  </fieldset>\n);\n\nconst ResetPasswordForm = ({ handleSubmit }) => {\n  return (\n    <Formik\n      initialValues={{\n        email: \"\",\n      }}\n      validationSchema={signUpSchema}\n      onSubmit={handleSubmit}\n    >\n      {(state) => (\n        <Form className=\"reset-password-form\">\n          <FieldSet name=\"email\" label=\"Email\" {...state} />\n\n          <button>Reset Password</button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default ResetPasswordForm;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport ResetPasswordCaptcha from \"./resetPasswordCaptcha/ResetPasswordCaptcha\";\nimport ResetPasswordConfirmation from \"./resetPasswordConfirmation/ResetPasswordConfirmation\";\nimport ResetPasswordForm from \"./resetPasswordForm/ResetPasswordForm\";\nimport SideCarousel from \"../../components/sideCarousel/SideCarousel\";\n\nimport \"./reset-password.scss\";\n\nconst RESET_PASSWORD_VIEWS = {\n  FORM: \"FORM\",\n  CAPTCHA: \"CAPTCHA\",\n  CONFIRM: \"CONFIRM\",\n};\n\nconst { FORM, CAPTCHA, CONFIRM } = RESET_PASSWORD_VIEWS;\n\nconst ResetPassword = () => {\n  const [currentView, setCurrentView] = useState(FORM);\n  function handleSubmit(values) {\n    if (values.email) {\n      setCurrentView(CAPTCHA);\n    }\n  }\n\n  return (\n    <div className=\"authentication-container reset-password-container\">\n      <div className=\"authentication-left\">\n        <div className=\"tilt-logo\">\n          <img\n            src=\"https://www.tiltaccess.com/static/media/tilt_logo.e727179e.png\"\n            alt=\"tilt-logo\"\n          ></img>\n        </div>\n\n        <SideCarousel />\n      </div>\n\n      <div className=\"authentication-right\">\n        {currentView === FORM && (\n          <div className=\"reset-password-form-view\">\n            <div className=\"form-container\">\n              <div className=\"form-header\">\n                <h1>Reset Password</h1>\n                <p>\n                  Enter the email address associated with your account and we'll\n                  send you a link to reset your password.\n                </p>\n              </div>\n\n              <ResetPasswordForm handleSubmit={handleSubmit} />\n\n              <div className=\"form-footer\">\n                <p>\n                  Don't have an account? <Link to=\"/signup\">Get started</Link>\n                </p>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {currentView === CAPTCHA && (\n          <ResetPasswordCaptcha\n            setCurrentView={setCurrentView}\n            views={RESET_PASSWORD_VIEWS}\n          />\n        )}\n\n        {currentView === CONFIRM && (\n          <ResetPasswordConfirmation\n            setCurrentView={setCurrentView}\n            views={RESET_PASSWORD_VIEWS}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ResetPassword;\n"],"sourceRoot":""}