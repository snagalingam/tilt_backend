{"version":3,"sources":["apollo/mutations/account.js","views/onboarding/onboardingTemplate/OnboardingTemplate.jsx","views/onboarding/completion/Completion.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","views/onboarding/customTextInput/CustomTextInput.jsx","views/onboarding/graduationYear/CustomGradYear.jsx","views/onboarding/graduationYear/GradYear.jsx","views/onboarding/schoolDistrict/SchoolDistrict.jsx","views/onboarding/counselor/Counselor.jsx","views/onboarding/organization/OrganizationName.jsx","views/onboarding/twoOptions/TwoOptions.jsx","views/onboarding/organization/Organization.jsx","views/onboarding/otherUser/OtherUser.jsx","views/onboarding/highSchoolName/HighSchoolName.jsx","views/onboarding/parent/Parent.jsx","views/onboarding/preferredName/PreferredNameInput.jsx","views/onboarding/preferredName/PreferredName.jsx","views/onboarding/skipOnboarding/SkipOnboarding.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","views/onboarding/source/CustomSource.jsx","views/onboarding/source/Source.jsx","views/onboarding/act/ActScore.jsx","views/onboarding/act/Act.jsx","views/onboarding/ethnicity/CustomEthnicity.jsx","views/onboarding/ethnicity/Ethnicity.jsx","views/onboarding/familyIncome/FamilyIncome.jsx","views/onboarding/gpa/Gpa.jsx","views/onboarding/preferredPronoun/CustomPronoun.jsx","views/onboarding/preferredPronoun/PreferredPronoun.jsx","views/onboarding/sat/SatScore.jsx","views/onboarding/sat/Sat.jsx","views/onboarding/student/Student.jsx","views/onboarding/userType/UserType.jsx","views/onboarding/Onboarding.jsx"],"names":["LOGIN","gql","SIGN_UP","ONBOARD_USER","OnboardingTemplate","name","h1","p","children","previousFunc","previousText","nextFunc","nextText","className","onClick","Completion","useState","goToDashboard","setGoToDashboard","push","to","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","CustomTextInput","inputRef","field","handleSubmit","customSchema","buttonText","errorMessage","defaultSchema","yup","shape","required","schema","useEffect","focus","initialValues","validationSchema","onSubmit","state","innerRef","input","type","CustomGradYear","next","previous","highSchool","onboardingAnswers","onboardingAnswersVar","highschoolGraduationYear","min","max","values","GradYear","parent","counselor","other","showCustomGradYear","toggleShowCustomGradYear","gradYearButton","year","SchoolDistrict","schoolDistrict","Counselor","props","flowIndex","OrganizationName","toggleShowOrgInput","showGradYear","toggleShowGradYear","organizationName","TwoOptions","first","handleFirst","second","handleSecond","Organization","showOrgInput","OtherUser","HighSchoolName","highSchoolName","Parent","PreferredNameInput","toggleShowPreferredNameInput","preferredName","PreferredName","me","firstName","showPreferredNameInput","SkipOnboarding","isSkip","setIsSkip","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","CustomSource","addCustomSource","Source","userTypes","flows","useMutation","onboardUser","onboardingData","useQuery","GET_ONBOARDING_ANSWERS","data","meData","GET_ME","isCustomSource","toggleIsCustomSource","otherSource","setOther","sources","selectSources","HIGH_SCHOOL","COLLEGE","PARENT","COUNSELOR","OTHER","highSchoolFlow","collegeFlow","parentFlow","counselorFlow","otherFlow","userType","sourceButton","option","index","indexOf","copy","splice","handleClick","updatedOnboardingAnswers","variables","id","map","ActScore","actScore","Act","college","didTakeAct","setDidTakeAct","CustomEthnicity","ethnicity","Ethnicity","otherEthnicity","setOtherEthnicity","ethnicityButton","FamilyIncome","income","familyIncome","Gpa","gpa","CustomPronoun","pronouns","PreferredPronoun","isCustomPronoun","setIsCustomPronoun","pronounButton","pronoun","SatScore","satScore","Sat","didTakeSat","setDidTakeSat","Student","UserType","1","2","3","4","5","6","7","8","flow","Onboarding","error","flowType","setFlowType","setFlowIndex","newFlow","prev","style","position","entries"],"mappings":"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","file":"static/js/3.009d669e.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const LOGIN = gql`\n  mutation LoginUser($email: String!, $password: String!) {\n    loginUser(email: $email, password: $password) {\n      user {\n        email\n      }\n    }\n  }\n`;\n\nexport const SIGN_UP = gql`\n  mutation CreateUser(\n    $email: String!\n    $firstName: String\n    $lastName: String\n    $password: String!\n  ) {\n    createUser(\n      email: $email\n      firstName: $firstName\n      lastName: $lastName\n      password: $password\n    ) {\n      user {\n        firstName\n        lastName\n        email\n      }\n    }\n  }\n`;\n\nexport const ONBOARD_USER = gql`\n  mutation OnboardUser(\n    $id: ID\n    $gpa: Float\n    $actScore: Int\n    $satScore: Int\n    $termsAndConditions: Boolean\n    $pronouns: String\n    $ethnicity: String\n    $userType: String\n    $highschoolGraduationYear: Int\n  ) {\n    onboardUser(\n      id: $id\n      gpa: $gpa\n      actScore: $actScore\n      satScore: $satScore\n      termsAndConditions: $termsAndConditions\n      pronouns: $pronouns\n      ethnicity: $ethnicity\n      userType: $userType\n      highschoolGraduationYear: $highschoolGraduationYear\n    ) {\n      user {\n        email\n        firstName\n        lastName\n        email\n      }\n    }\n  }\n`;\n","import React from \"react\";\n\nconst OnboardingTemplate = ({\n  name,\n  h1,\n  p,\n  children,\n  previousFunc,\n  previousText = \"Back\",\n  nextFunc,\n  nextText = \"Continue\",\n}) => {\n  return (\n    <div className={`${name}-container form-container`}>\n      <div className=\"form-header\">\n        {h1 && <h1>{h1}</h1>}\n        {p && <p>{p}</p>}\n      </div>\n      {children && <div className=\"form-body\">{children}</div>}\n      <div className=\"onboarding-buttons\">\n        {nextFunc && <button onClick={nextFunc}>{nextText}</button>}\n        {previousFunc && (\n          <button className=\"secondary-button\" onClick={previousFunc}>\n            {previousText}\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default OnboardingTemplate;\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\n\nconst Completion = () => {\n  const [goToDashboard, setGoToDashboard] = useState(false);\n\n  if (goToDashboard) return <Redirect push to=\"/dashboard\" />;\n\n  return (\n    <OnboardingTemplate\n      name=\"completion\"\n      h1=\"That's it!\"\n      p=\" We are now set to find you soem affordable colleges, so you don't\n    graduate with $$$ in debt.\"\n      nextFunc={() => setGoToDashboard(true)}\n      nextText=\"Go to Dashboard\"\n    />\n  );\n};\n\nexport default Completion;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React, { useEffect } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as yup from \"yup\";\n\nimport \"./custom-text-input.scss\";\n\nconst CustomTextInput = ({\n  field,\n  handleSubmit,\n  customSchema,\n  buttonText = \"Continue\",\n  errorMessage = \"Please enter your information\",\n}) => {\n  const defaultSchema = yup.object().shape({\n    [field]: yup.string().required(errorMessage),\n  });\n  const schema = customSchema ? customSchema : defaultSchema;\n\n  let inputRef;\n  useEffect(() => {\n    if (inputRef) {\n      inputRef.focus();\n    }\n  });\n\n  return (\n    <Formik\n      initialValues={{\n        [field]: \"\",\n      }}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      {(state) => (\n        <Form className=\"custom-text-input\">\n          <Field name={field} innerRef={(input) => (inputRef = input)}></Field>\n          {/* {state.errors && state.touched && (\n            <span className=\"custom-text-input-error\">\n              {state.errors[field]}\n            </span>\n          )} */}\n          <button type=\"submit\">{buttonText}</button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default CustomTextInput;\n","import React from \"react\";\nimport * as yup from \"yup\";\n\nimport CustomTextInput from \"../customTextInput/CustomTextInput\";\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\n\nimport { onboardingAnswersVar } from \"../../../apollo/reactiveVariables/account\";\n\nconst CustomGradYear = ({ next, previous, highSchool }) => {\n  const onboardingAnswers = { ...onboardingAnswersVar() };\n\n  function handleSubmit(values) {\n    const { highschoolGraduationYear } = values;\n    onboardingAnswersVar({ ...onboardingAnswers, highschoolGraduationYear });\n    next();\n  }\n\n  function handlePrevious() {\n    if (onboardingAnswers?.highschoolGraduationYear) {\n      delete onboardingAnswers.highschoolGraduationYear;\n      onboardingAnswersVar(onboardingAnswers);\n    }\n    previous();\n  }\n\n  const schema = yup.object().shape({\n    highschoolGraduationYear: yup\n      .number()\n      .min(\"2000\")\n      .max(\"2025\")\n      .required(\"Please enter the year you graduated\"),\n  });\n\n  return (\n    <OnboardingTemplate\n      name=\"grad-year\"\n      h1={\n        highSchool ? \"When are you graduating?\" : \"What year did you graduate?\"\n      }\n      previousFunc={handlePrevious}\n    >\n      <CustomTextInput\n        field=\"highschoolGraduationYear\"\n        handleSubmit={handleSubmit}\n        customSchema={schema}\n      />\n    </OnboardingTemplate>\n  );\n};\n\nexport default CustomGradYear;\n","import React, { useState } from \"react\";\n\nimport CustomGradYear from \"./CustomGradYear\";\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\n\nimport { onboardingAnswersVar } from \"../../../apollo/reactiveVariables/account\";\n\nimport \"./grad-year.scss\";\n\nconst GradYear = ({ highSchool, parent, counselor, other, next, previous }) => {\n  const [showCustomGradYear, toggleShowCustomGradYear] = useState(false);\n  const onboardingAnswers = { ...onboardingAnswersVar() };\n\n  function handleNext(highschoolGraduationYear) {\n    onboardingAnswersVar({ ...onboardingAnswers, highschoolGraduationYear });\n    next();\n  }\n\n  function handlePrevious() {\n    if (onboardingAnswers?.highschoolGraduationYear) {\n      delete onboardingAnswers.highschoolGraduationYear;\n      onboardingAnswersVar(onboardingAnswers);\n    }\n    previous();\n  }\n\n  const gradYearButton = (year) => (\n    <button onClick={() => handleNext(year)} className=\"block-button \">\n      {year}\n    </button>\n  );\n\n  if (showCustomGradYear)\n    return (\n      <CustomGradYear\n        next={next}\n        previous={() => toggleShowCustomGradYear(false)}\n      />\n    );\n\n  return (\n    <OnboardingTemplate\n      name=\"user-type\"\n      h1={\n        highSchool\n          ? \"When will you be graduating high school?\"\n          : parent\n          ? \"When is your child graduating?\"\n          : counselor || other\n          ? \"What year will your students graduate high school in?\"\n          : \"When did you graduate from high school?\"\n      }\n      previousFunc={handlePrevious}\n    >\n      <div>\n        <div className=\"first-row\">\n          {gradYearButton(2021)}\n          {gradYearButton(2022)}\n          {gradYearButton(2023)}\n        </div>\n        <div className=\"second-row\">\n          {gradYearButton(2023)}\n          <button\n            className=\"block-button\"\n            onClick={() => toggleShowCustomGradYear(true)}\n          >\n            Other\n          </button>\n        </div>\n      </div>\n    </OnboardingTemplate>\n  );\n};\n\nexport default GradYear;\n","import React from \"react\";\n\nimport CustomTextInput from \"../customTextInput/CustomTextInput\";\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\n\nimport { onboardingAnswersVar } from \"../../../apollo/reactiveVariables/account\";\n\nimport \"./school-district.scss\";\n\nconst SchoolDistrict = ({ previous, next }) => {\n  const onboardingAnswers = { ...onboardingAnswersVar() };\n\n  function handleSubmit(values) {\n    const { schoolDistrict } = values;\n    onboardingAnswersVar({ ...onboardingAnswers, schoolDistrict });\n    next();\n  }\n\n  function handlePrevious() {\n    if (onboardingAnswers?.schoolDistrict) {\n      delete onboardingAnswers.schoolDistrict;\n      onboardingAnswersVar(onboardingAnswers);\n    }\n    previous();\n  }\n  return (\n    <OnboardingTemplate\n      name=\"school-district\"\n      h1=\"What school or district do you work at?\"\n      previousFunc={handlePrevious}\n    >\n      <CustomTextInput\n        field=\"schoolDistrict\"\n        handleSubmit={handleSubmit}\n        errorMessage=\"Please enter a school or district name\"\n      />\n    </OnboardingTemplate>\n  );\n};\n\nexport default SchoolDistrict;\n","import React from \"react\";\n\nimport GradYear from \"../graduationYear/GradYear\";\nimport SchoolDistrict from \"../schoolDistrict/SchoolDistrict\";\n\nconst Counselor = (props) => {\n  const { flowIndex } = props;\n  return (\n    <div className=\"counselor-container\">\n      {flowIndex === 1 && <SchoolDistrict {...props} />}\n      {flowIndex === 2 && <GradYear counselor {...props} />}\n    </div>\n  );\n};\n\nexport default Counselor;\n","import React, { useState } from \"react\";\n\nimport CustomTextInput from \"../customTextInput/CustomTextInput\";\nimport GradYear from \"../graduationYear/GradYear\";\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\n\nimport { onboardingAnswersVar } from \"../../../apollo/reactiveVariables/account\";\n\nimport \"./organization.scss\";\n\nconst OrganizationName = ({ next, toggleShowOrgInput }) => {\n  const [showGradYear, toggleShowGradYear] = useState(false);\n  const onboardingAnswers = { ...onboardingAnswersVar() };\n\n  function handleSubmit(values) {\n    const { organizationName } = values;\n    onboardingAnswersVar({ ...onboardingAnswers, organizationName });\n    toggleShowGradYear(true);\n  }\n\n  function handlePrevious() {\n    if (onboardingAnswers?.organizationName) {\n      delete onboardingAnswers.organizationName;\n    }\n    if (onboardingAnswers?.highschoolGraduationYear) {\n      delete onboardingAnswers.highschoolGraduationYear;\n    }\n    onboardingAnswersVar(onboardingAnswers);\n    toggleShowOrgInput(false);\n  }\n\n  if (showGradYear)\n    return (\n      <GradYear other next={next} previous={() => toggleShowGradYear(false)} />\n    );\n\n  return (\n    <OnboardingTemplate\n      name=\"organization-name\"\n      h1=\"What organization do you work at?\"\n      previousFunc={handlePrevious}\n    >\n      <CustomTextInput\n        field=\"organizationName\"\n        handleSubmit={handleSubmit}\n        errorMessage=\"Please enter your organization name.\"\n      />\n    </OnboardingTemplate>\n  );\n};\n\nexport default OrganizationName;\n","import React from \"react\";\n\nimport \"./two-options.scss\";\n\nconst TwoOptions = ({ first, handleFirst, second, handleSecond }) => {\n  return (\n    <div className=\"two-options\">\n      <button className=\"block-button\" onClick={handleFirst}>\n        {first}\n      </button>\n      <button className=\"block-button\" onClick={handleSecond}>\n        {second}\n      </button>\n    </div>\n  );\n};\n\nexport default TwoOptions;\n","import React, { useState } from \"react\";\n\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\nimport OrganizationName from \"./OrganizationName\";\nimport TwoOptions from \"../twoOptions/TwoOptions\";\n\nimport { onboardingAnswersVar } from \"../../../apollo/reactiveVariables/account\";\n\nconst Organization = ({ next, previous }) => {\n  const [showOrgInput, toggleShowOrgInput] = useState(false);\n  const onboardingAnswers = { ...onboardingAnswersVar() };\n\n  function handlePrevious() {\n    if (onboardingAnswers?.organizationName) {\n      delete onboardingAnswers.organizationName;\n    }\n    if (onboardingAnswers?.highschoolGraduationYear) {\n      delete onboardingAnswers.highschoolGraduationYear;\n    }\n    onboardingAnswersVar(onboardingAnswers);\n    previous();\n  }\n\n  if (showOrgInput)\n    return (\n      <OrganizationName\n        next={next}\n        previous={previous}\n        toggleShowOrgInput={toggleShowOrgInput}\n      />\n    );\n\n  return (\n    <OnboardingTemplate\n      name=\"organization\"\n      h1=\"Do you work at an organization that supports students?\"\n      previousFunc={handlePrevious}\n    >\n      <TwoOptions\n        first=\"Yes\"\n        handleFirst={() => toggleShowOrgInput(true)}\n        second=\"No\"\n        handleSecond={next}\n      />\n    </OnboardingTemplate>\n  );\n};\n\nexport default Organization;\n","import React from \"react\";\n\nimport Organization from \"../organization/Organization\";\n\nconst OtherUser = (props) => {\n  const { flowIndex } = props;\n\n  return (\n    <div className=\"other-user-container\">\n      {flowIndex === 1 && <Organization {...props} />}\n    </div>\n  );\n};\n\nexport default OtherUser;\n","import React from \"react\";\n\nimport CustomTextInput from \"../customTextInput/CustomTextInput\";\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\n\nimport { onboardingAnswersVar } from \"../../../apollo/reactiveVariables/account\";\n\nimport \"./high-school-name.scss\";\n\nconst HighSchoolName = ({ next, previous, highSchool, parent }) => {\n  const onboardingAnswers = { ...onboardingAnswersVar() };\n\n  function handleSubmit(values) {\n    const { highSchoolName } = values;\n    onboardingAnswersVar({ ...onboardingAnswers, highSchoolName });\n    next();\n  }\n\n  function handlePrevious() {\n    if (onboardingAnswers?.highSchoolName) {\n      delete onboardingAnswers.highSchoolName;\n      onboardingAnswersVar({ ...onboardingAnswers });\n    }\n    previous();\n  }\n\n  return (\n    <OnboardingTemplate\n      name=\"high-school-name\"\n      h1={\n        highSchool\n          ? \"What high school do you currently attend?\"\n          : parent\n          ? \"What high school does your child currently attend?\"\n          : \"What high school did you graduate from?\"\n      }\n      previousFunc={handlePrevious}\n    >\n      <CustomTextInput\n        field=\"highSchoolName\"\n        handleSubmit={handleSubmit}\n        errorMessage=\"Please enter your high school name.\"\n      />\n    </OnboardingTemplate>\n  );\n};\n\nexport default HighSchoolName;\n","import React from \"react\";\n\nimport HighSchoolName from \"../highSchoolName/HighSchoolName\";\nimport GradYear from \"../graduationYear/GradYear\";\n\nconst Parent = (props) => {\n  const { flowIndex } = props;\n  return (\n    <div className=\"parent-container\">\n      {flowIndex === 1 && <HighSchoolName {...props} parent />}\n      {flowIndex === 2 && <GradYear {...props} parent />}\n    </div>\n  );\n};\n\nexport default Parent;\n","import React from \"react\";\n\nimport CustomTextInput from \"../customTextInput/CustomTextInput\";\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\n\nimport { onboardingAnswersVar } from \"../../../apollo/reactiveVariables/account\";\n\nconst PreferredNameInput = ({ next, toggleShowPreferredNameInput }) => {\n  const onboardingAnswers = { ...onboardingAnswersVar() };\n\n  function handleSubmit(values) {\n    const { preferredName } = values;\n    if (onboardingAnswers) {\n      onboardingAnswersVar({ ...onboardingAnswers, preferredName });\n    } else {\n      onboardingAnswersVar({ preferredName });\n    }\n    next();\n  }\n\n  function handlePrevious() {\n    if (onboardingAnswers?.preferredName) {\n      delete onboardingAnswers.preferredName;\n      onboardingAnswersVar({ ...onboardingAnswers });\n    }\n    toggleShowPreferredNameInput(false);\n  }\n\n  return (\n    <OnboardingTemplate\n      name=\"preferred-name\"\n      h1=\"Please enter your preferred name\"\n      previousFunc={handlePrevious}\n    >\n      <CustomTextInput\n        field=\"preferredName\"\n        handleSubmit={handleSubmit}\n        errorMessage=\"Please enter your preferred name.\"\n      />\n    </OnboardingTemplate>\n  );\n};\n\nexport default PreferredNameInput;\n","import React, { useState } from \"react\";\n\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\nimport PreferredNameInput from \"./PreferredNameInput\";\nimport TwoOptions from \"../twoOptions/TwoOptions\";\n\nimport { onboardingAnswersVar } from \"../../../apollo/reactiveVariables/account\";\n\nimport \"./preferred-name.scss\";\n\nconst PreferredName = ({ me, previous, next }) => {\n  const firstName = me ? me?.firstName : \"anonymous\";\n  const [showPreferredNameInput, toggleShowPreferredNameInput] = useState(\n    false\n  );\n  const onboardingAnswers = { ...onboardingAnswersVar() };\n\n  function handleNext() {\n    if (onboardingAnswers?.preferredName) {\n      delete onboardingAnswers.preferredName;\n      onboardingAnswersVar(onboardingAnswers);\n    }\n    next();\n  }\n\n  function handlePrevious() {\n    if (onboardingAnswers?.preferredName) {\n      delete onboardingAnswers.preferredName;\n      onboardingAnswersVar(onboardingAnswers);\n    }\n    previous();\n  }\n\n  if (showPreferredNameInput)\n    return (\n      <PreferredNameInput\n        next={next}\n        previous={previous}\n        toggleShowPreferredNameInput={toggleShowPreferredNameInput}\n      />\n    );\n\n  return (\n    <OnboardingTemplate\n      name=\"preferred-name-options\"\n      h1={`Should we call you ${firstName}, or do you have another preferred name?`}\n      previousFunc={handlePrevious}\n    >\n      <TwoOptions\n        first=\"Yes\"\n        handleFirst={handleNext}\n        second=\"Other Name\"\n        handleSecond={() => toggleShowPreferredNameInput(true)}\n      />\n    </OnboardingTemplate>\n  );\n};\n\nexport default PreferredName;\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\n\nconst SkipOnboarding = ({ me = {}, next }) => {\n  const { firstName = \"default\" } = me;\n  const [isSkip, setIsSkip] = useState(false);\n\n  if (isSkip) return <Redirect push to=\"/dashboard\" />;\n\n  return (\n    <OnboardingTemplate\n      name=\"skip-onboarding\"\n      h1={`Hi, ${firstName}`}\n      p=\"To help personalize your experience, we need a bit more information\"\n      nextFunc={next}\n      nextText=\"Let's Start\"\n      previousFunc={() => setIsSkip(true)}\n      previousText=\"Skip for Now\"\n    />\n  );\n};\n\nexport default SkipOnboarding;\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from \"react\";\n\nimport CustomTextInput from \"../customTextInput/CustomTextInput\";\n\nconst CustomSource = ({ previous, addCustomSource }) => {\n  function handleSubmit(values) {\n    const { source } = values;\n    addCustomSource(source);\n    previous();\n  }\n\n  return (\n    <div className=\"custom-source-container form-container\">\n      <div className=\"form-header\">\n        <h1>How did you hear about Tilt?</h1>\n      </div>\n      <CustomTextInput\n        field=\"source\"\n        handleSubmit={handleSubmit}\n        errorMessage=\"Source missing.\"\n      />\n      <button className=\"secondary-button\" onClick={previous}>\n        Back\n      </button>\n    </div>\n  );\n};\n\nexport default CustomSource;\n","import React, { useEffect, useState } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/client\";\n\nimport CustomSource from \"./CustomSource\";\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\n\nimport { ONBOARD_USER } from \"../../../apollo/mutations/account\";\nimport {\n  GET_ONBOARDING_ANSWERS,\n  GET_ME,\n} from \"../../../apollo/queries/account\";\nimport { onboardingAnswersVar } from \"../../../apollo/reactiveVariables/account\";\n\nimport \"./source.scss\";\n\nconst Source = ({ previous, next, userTypes, flows }) => {\n  const [onboardUser, response] = useMutation(ONBOARD_USER);\n  const { data: onboardingData } = useQuery(GET_ONBOARDING_ANSWERS);\n  const { data: meData } = useQuery(GET_ME);\n  const { onboardingAnswers } = onboardingData;\n\n  const [isCustomSource, toggleIsCustomSource] = useState(false);\n  const [otherSource, setOther] = useState(null);\n  const [sources, selectSources] = useState([]);\n\n  const { HIGH_SCHOOL, COLLEGE, PARENT, COUNSELOR, OTHER } = userTypes;\n  const {\n    highSchoolFlow,\n    collegeFlow,\n    parentFlow,\n    counselorFlow,\n    otherFlow,\n  } = flows;\n  const { userType } = onboardingAnswers;\n\n  function handlePrevious() {\n    if (userType === HIGH_SCHOOL) {\n      previous(highSchoolFlow);\n    }\n    if (userType === COLLEGE) {\n      previous(collegeFlow);\n    }\n    if (userType === PARENT) {\n      previous(parentFlow);\n    }\n    if (userType === COUNSELOR) {\n      previous(counselorFlow);\n    }\n    if (userType === OTHER) {\n      const copy = { ...onboardingAnswers };\n      if (copy?.organizationName) delete copy.organizationName;\n      if (copy?.highschoolGraduationYear) delete copy.highschoolGraduationYear;\n      onboardingAnswersVar(copy);\n      previous(otherFlow);\n    }\n  }\n\n  function handleClick(option) {\n    const copy = [...sources];\n    const index = copy.indexOf(option);\n    if (index >= 0) {\n      copy.splice(index, 1);\n    } else {\n      copy.push(option);\n    }\n    selectSources(copy);\n  }\n\n  const sourceButton = (option) => {\n    const index = sources.indexOf(option);\n    return (\n      <button\n        key={option}\n        onClick={() => handleClick(option)}\n        className={`block-button${index >= 0 ? \" selected\" : \"\"}`}\n      >\n        {option}\n      </button>\n    );\n  };\n\n  function handleSave() {\n    const copy = [...sources];\n    const index = copy.indexOf(otherSource);\n    if (index < 0 && otherSource) {\n      copy.push(otherSource);\n    }\n    selectSources(copy);\n    const updatedOnboardingAnswers = { ...onboardingAnswers, sources: copy };\n    onboardingAnswersVar(updatedOnboardingAnswers);\n    onboardUser({\n      variables: { ...updatedOnboardingAnswers, id: meData?.me?.id },\n    });\n    next();\n  }\n\n  if (isCustomSource)\n    return (\n      <CustomSource\n        previous={() => toggleIsCustomSource(false)}\n        addCustomSource={setOther}\n      />\n    );\n\n  return (\n    <OnboardingTemplate\n      name=\"source\"\n      h1=\"How did you hear about Tilt?\"\n      nextFunc={handleSave}\n      previousFunc={handlePrevious}\n    >\n      <div>\n        <div className=\"first-row\">\n          {[\"Instagram\", \"Facebook\", \"Parent\"].map((source) =>\n            sourceButton(source)\n          )}\n        </div>\n        <div className=\"second-row\">\n          {[\"School or District Staff\", \"Friend\"].map((source) =>\n            sourceButton(source)\n          )}\n          <button\n            className={`block-button${otherSource ? \" selected\" : \"\"}`}\n            onClick={() => toggleIsCustomSource(true)}\n          >\n            {otherSource || \"Other\"}\n          </button>\n        </div>\n      </div>\n    </OnboardingTemplate>\n  );\n};\n\nexport default Source;\n","import React from \"react\";\nimport * as yup from \"yup\";\n\nimport CustomTextInput from \"../customTextInput/CustomTextInput\";\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\n\nimport { onboardingAnswersVar } from \"../../../apollo/reactiveVariables/account\";\n\nconst ActScore = ({ next, previous }) => {\n  const onboardingAnswers = { ...onboardingAnswersVar() };\n\n  function handleSubmit(values) {\n    const { actScore } = values;\n    onboardingAnswersVar({ ...onboardingAnswers, actScore });\n    next();\n  }\n\n  function handlePrevious() {\n    if (onboardingAnswers?.actScore) {\n      delete onboardingAnswers.actScore;\n      onboardingAnswersVar(onboardingAnswers);\n    }\n    previous();\n  }\n\n  const schema = yup.object().shape({\n    actScore: yup\n      .number()\n      .min(1)\n      .max(36)\n      .required(\"Please enter a valid score\"),\n  });\n\n  return (\n    <OnboardingTemplate\n      name=\"act-score\"\n      h1=\"What was your highest ACT score?\"\n      previousFunc={handlePrevious}\n    >\n      <CustomTextInput\n        field=\"actScore\"\n        handleSubmit={handleSubmit}\n        customSchema={schema}\n      />\n    </OnboardingTemplate>\n  );\n};\n\nexport default ActScore;\n","import React, { useState } from \"react\";\n\nimport ActScore from \"./ActScore\";\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\nimport TwoOptions from \"../twoOptions/TwoOptions\";\n\nimport { onboardingAnswersVar } from \"../../../apollo/reactiveVariables/account\";\n\nimport \"./act.scss\";\n\nconst Act = ({ next, previous, college }) => {\n  const [didTakeAct, setDidTakeAct] = useState(false);\n  const onboardingAnswers = { ...onboardingAnswersVar() };\n\n  function handlePrevious() {\n    if (onboardingAnswers?.actScore) {\n      delete onboardingAnswers.actScore;\n      onboardingAnswersVar(onboardingAnswers);\n    }\n    previous();\n  }\n\n  if (didTakeAct || college)\n    return <ActScore next={next} previous={() => setDidTakeAct(false)} />;\n\n  return (\n    <OnboardingTemplate\n      name=\"act\"\n      h1=\"Have you taken the ACT yet?\"\n      previousFunc={handlePrevious}\n    >\n      <TwoOptions\n        first=\"Yes\"\n        handleFirst={() => setDidTakeAct(true)}\n        second=\"No\"\n        handleSecond={next}\n      />\n    </OnboardingTemplate>\n  );\n};\n\nexport default Act;\n","import React from \"react\";\n\nimport CustomTextInput from \"../customTextInput/CustomTextInput\";\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\n\nimport { onboardingAnswersVar } from \"../../../apollo/reactiveVariables/account\";\n\nconst CustomEthnicity = ({ previous, next }) => {\n  const onboardingAnswers = { ...onboardingAnswersVar() };\n\n  function handleSubmit(values) {\n    const { ethnicity } = values;\n    onboardingAnswersVar({ ...onboardingAnswers, ethnicity });\n    next();\n  }\n\n  function handlePrevious() {\n    if (onboardingAnswers?.ethnicity) {\n      delete onboardingAnswers.ethnicity;\n      onboardingAnswersVar(onboardingAnswers);\n    }\n    previous();\n  }\n\n  return (\n    <OnboardingTemplate\n      name=\"custom-ethnicity\"\n      h1=\"Which ethnicities do you identify with?\"\n      previousFunc={handlePrevious}\n    >\n      <CustomTextInput\n        field=\"ethnicity\"\n        handleSubmit={handleSubmit}\n        errorMessage=\"Please enter your ethnicity.\"\n      />\n    </OnboardingTemplate>\n  );\n};\n\nexport default CustomEthnicity;\n","import React, { useState } from \"react\";\n\nimport CustomEthnicity from \"./CustomEthnicity\";\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\n\nimport { onboardingAnswersVar } from \"../../../apollo/reactiveVariables/account\";\n\nimport \"./ethnicity.scss\";\n\nconst Ethnicity = ({ previous, next }) => {\n  const [otherEthnicity, setOtherEthnicity] = useState(false);\n  const onboardingAnswers = { ...onboardingAnswersVar() };\n\n  function handleClick(ethnicity) {\n    onboardingAnswersVar({ ...onboardingAnswers, ethnicity });\n    next();\n  }\n\n  function handlePreferNotToAnswer() {\n    onboardingAnswersVar({\n      ...onboardingAnswers,\n      ethnicity: \"Prefer not to answer\",\n    });\n    next();\n  }\n\n  function handlePrevious() {\n    if (onboardingAnswers?.ethnicity) {\n      delete onboardingAnswers.ethnicity;\n      onboardingAnswersVar(onboardingAnswers);\n    }\n    previous();\n  }\n\n  const ethnicityButton = (option) => {\n    return (\n      <button\n        key={option}\n        onClick={() => handleClick(option)}\n        className=\"block-button\"\n      >\n        {option}\n      </button>\n    );\n  };\n\n  if (otherEthnicity)\n    return <CustomEthnicity previous={previous} next={next} />;\n\n  return (\n    <OnboardingTemplate\n      name=\"ethnicity\"\n      h1=\"Which ethnicities do you identify with?\"\n      previousFunc={handlePrevious}\n      nextText={\"Prefer not to answer\"}\n      nextFunc={handlePreferNotToAnswer}\n    >\n      <div>\n        <div className=\"first-row\">\n          {[\n            \"Pacific Islander\",\n            \"Black/African\",\n            \"Hispanic/Latinx\",\n            \"Native American\",\n          ].map((ethnicity) => ethnicityButton(ethnicity))}\n        </div>\n        <div className=\"second-row\">\n          {[\"Asian\", \"White\"].map((ethnicity) => ethnicityButton(ethnicity))}\n          <button\n            className=\"block-button\"\n            onClick={() => setOtherEthnicity(true)}\n          >\n            Other\n          </button>\n        </div>\n      </div>\n    </OnboardingTemplate>\n  );\n};\n\nexport default Ethnicity;\n","import React from \"react\";\n\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\n\nimport { onboardingAnswersVar } from \"../../../apollo/reactiveVariables/account\";\n\nconst FamilyIncome = ({ next, previous }) => {\n  const onboardingAnswers = { ...onboardingAnswersVar() };\n\n  function handleClick(familyIncome) {\n    onboardingAnswersVar({ ...onboardingAnswers, familyIncome });\n    next();\n  }\n\n  function handlePrevious() {\n    if (onboardingAnswers?.familyIncome) {\n      delete onboardingAnswers.familyIncome;\n      onboardingAnswersVar(onboardingAnswers);\n    }\n    previous();\n  }\n\n  const familyIncomeButton = (income) => (\n    <button onClick={() => handleClick(income)}>{income}</button>\n  );\n\n  return (\n    <OnboardingTemplate\n      name=\"family-income\"\n      h1=\"What is your family income?\"\n      previousFunc={handlePrevious}\n    >\n      <div>{familyIncomeButton(10000)}</div>\n    </OnboardingTemplate>\n  );\n};\n\nexport default FamilyIncome;\n","import React from \"react\";\nimport * as yup from \"yup\";\n\nimport CustomTextInput from \"../customTextInput/CustomTextInput\";\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\n\nimport { onboardingAnswersVar } from \"../../../apollo/reactiveVariables/account\";\n\nimport \"./gpa.scss\";\n\nconst Gpa = ({ next, previous }) => {\n  const onboardingAnswers = { ...onboardingAnswersVar() };\n\n  function handleSubmit(values) {\n    const { gpa } = values;\n    onboardingAnswersVar({ ...onboardingAnswers, gpa });\n    next();\n  }\n\n  function handlePrevious() {\n    if (onboardingAnswers?.gpa) {\n      delete onboardingAnswers.gpa;\n      onboardingAnswersVar(onboardingAnswers);\n    }\n    previous();\n  }\n\n  const schema = yup.object().shape({\n    gpa: yup.number().min(0).max(6).required(\"Please enter a valid GPA\"),\n  });\n\n  return (\n    <OnboardingTemplate\n      name=\"gpa\"\n      h1=\"What is your unweighted GPA?\"\n      previousFunc={handlePrevious}\n    >\n      <CustomTextInput\n        field=\"gpa\"\n        handleSubmit={handleSubmit}\n        customSchema={schema}\n      />\n    </OnboardingTemplate>\n  );\n};\n\nexport default Gpa;\n","import React from \"react\";\n\nimport CustomTextInput from \"../customTextInput/CustomTextInput\";\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\n\nimport { onboardingAnswersVar } from \"../../../apollo/reactiveVariables/account\";\n\nconst CustomPronoun = ({ previous, next }) => {\n  const onboardingAnswers = { ...onboardingAnswersVar() };\n\n  function handleSubmit(values) {\n    const { pronouns } = values;\n    onboardingAnswersVar({ ...onboardingAnswers, pronouns });\n    next();\n  }\n\n  function handlePrevious() {\n    if (onboardingAnswers?.pronouns) {\n      delete onboardingAnswers.pronouns;\n      onboardingAnswersVar(onboardingAnswers);\n    }\n    previous();\n  }\n\n  return (\n    <OnboardingTemplate\n      name=\"custom-pronoun\"\n      h1=\"What is your preferred pronoun?\"\n      previousFunc={handlePrevious}\n    >\n      <CustomTextInput\n        field=\"pronouns\"\n        handleSubmit={handleSubmit}\n        errorMessage=\"Please enter your preferred pronoun.\"\n      />\n    </OnboardingTemplate>\n  );\n};\n\nexport default CustomPronoun;\n","import React, { useState } from \"react\";\n\nimport CustomPronoun from \"./CustomPronoun\";\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\n\nimport { onboardingAnswersVar } from \"../../../apollo/reactiveVariables/account\";\n\nimport \"./preferred-pronoun.scss\";\n\nconst PreferredPronoun = ({ next, previous }) => {\n  const [isCustomPronoun, setIsCustomPronoun] = useState(false);\n  const onboardingAnswers = { ...onboardingAnswersVar() };\n\n  function handleClick(option) {\n    onboardingAnswersVar({ ...onboardingAnswers, pronouns: option });\n    next();\n  }\n\n  function handlePrevious() {\n    if (onboardingAnswers.pronouns) {\n      delete onboardingAnswers.pronouns;\n      onboardingAnswersVar(onboardingAnswers);\n    }\n    previous();\n  }\n\n  const pronounButton = (option) => (\n    <button\n      key={option}\n      onClick={() => handleClick(option)}\n      className=\"block-button\"\n    >\n      {option}\n    </button>\n  );\n\n  if (isCustomPronoun)\n    return (\n      <CustomPronoun previous={() => setIsCustomPronoun(false)} next={next} />\n    );\n\n  return (\n    <OnboardingTemplate\n      name=\"preferred-pronoun\"\n      h1=\"What is your preferred pronoun?\"\n      previousFunc={handlePrevious}\n    >\n      <div>\n        {[\"He\", \"She\", \"They\"].map((pronoun) => pronounButton(pronoun))}\n        <button\n          onClick={() => setIsCustomPronoun(true)}\n          className=\"block-button\"\n        >\n          Other\n        </button>\n      </div>\n    </OnboardingTemplate>\n  );\n};\n\nexport default PreferredPronoun;\n","import React from \"react\";\nimport * as yup from \"yup\";\n\nimport CustomTextInput from \"../customTextInput/CustomTextInput\";\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\n\nimport { onboardingAnswersVar } from \"../../../apollo/reactiveVariables/account\";\n\nimport \"./sat.scss\";\n\nconst SatScore = ({ next, previous }) => {\n  const onboardingAnswers = { ...onboardingAnswersVar() };\n\n  function handleSubmit(values) {\n    const { satScore } = values;\n    onboardingAnswersVar({ ...onboardingAnswers, satScore });\n    next();\n  }\n\n  function handlePrevious() {\n    if (onboardingAnswers?.satScore) {\n      delete onboardingAnswers.satScore;\n      onboardingAnswersVar(onboardingAnswers);\n    }\n    previous();\n  }\n\n  const schema = yup.object().shape({\n    satScore: yup\n      .number()\n      .min(400)\n      .max(1600)\n      .required(\"Please enter a valid score\"),\n  });\n\n  return (\n    <OnboardingTemplate\n      name=\"sat-score\"\n      h1=\"What was your highest SAT score?\"\n      previousFunc={handlePrevious}\n    >\n      <CustomTextInput\n        field=\"satScore\"\n        handleSubmit={handleSubmit}\n        customSchema={schema}\n      />\n    </OnboardingTemplate>\n  );\n};\n\nexport default SatScore;\n","import React, { useState } from \"react\";\n\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\nimport SatScore from \"./SatScore\";\nimport TwoOptions from \"../twoOptions/TwoOptions\";\n\nimport { onboardingAnswersVar } from \"../../../apollo/reactiveVariables/account\";\n\nconst Sat = ({ next, previous, college }) => {\n  const [didTakeSat, setDidTakeSat] = useState(false);\n  const onboardingAnswers = { ...onboardingAnswersVar() };\n\n  function handlePrevious() {\n    if (onboardingAnswers?.satScore) {\n      delete onboardingAnswers.satScore;\n      onboardingAnswersVar(onboardingAnswers);\n    }\n    previous();\n  }\n\n  if (didTakeSat)\n    return <SatScore next={next} previous={() => setDidTakeSat(false)} />;\n\n  return (\n    <OnboardingTemplate\n      name=\"sat\"\n      h1=\"Have you taken the SAT yet?\"\n      previousFunc={handlePrevious}\n    >\n      <TwoOptions\n        first=\"Yes\"\n        handleFirst={() => setDidTakeSat(true)}\n        second=\"No\"\n        handleSecond={next}\n      />\n    </OnboardingTemplate>\n  );\n};\n\nexport default Sat;\n","import React from \"react\";\n\nimport Act from \"../act/Act\";\nimport ActScore from \"../act/ActScore\";\nimport Ethnicity from \"../ethnicity/Ethnicity\";\nimport FamilyIncome from \"../familyIncome/FamilyIncome\";\nimport Gpa from \"../gpa/Gpa\";\nimport GradYear from \"../graduationYear/GradYear\";\nimport HighSchoolName from \"../highSchoolName/HighSchoolName\";\nimport PreferredPronoun from \"../preferredPronoun/PreferredPronoun\";\nimport Sat from \"../sat/Sat\";\nimport SatScore from \"../sat/SatScore\";\n\nconst Student = (props) => {\n  const { flowIndex, highSchool, college } = props;\n\n  return (\n    <div className=\"student-container\">\n      {flowIndex === 1 && <HighSchoolName {...props} />}\n      {flowIndex === 2 && <GradYear {...props} />}\n      {flowIndex === 3 && <Gpa {...props} />}\n      {flowIndex === 4 &&\n        (highSchool ? <Sat {...props} /> : <SatScore {...props} />)}\n      {flowIndex === 5 &&\n        (highSchool ? <Act {...props} /> : <ActScore {...props} />)}\n      {flowIndex === 6 && <FamilyIncome {...props} />}\n      {flowIndex === 7 && <PreferredPronoun {...props} />}\n      {flowIndex === 8 && <Ethnicity {...props} />}\n    </div>\n  );\n};\n\nexport default Student;\n","import React from \"react\";\nimport { useQuery } from \"@apollo/client\";\n\nimport { GET_ONBOARDING_ANSWERS } from \"../../../apollo/queries/account\";\nimport { onboardingAnswersVar } from \"../../../apollo/reactiveVariables/account\";\n\nimport \"./user-type.scss\";\n\nconst UserType = ({\n  previous,\n  next,\n  highSchoolFlow,\n  collegeFlow,\n  parentFlow,\n  counselorFlow,\n  otherFlow,\n  userTypes,\n}) => {\n  const { data: onboardingData } = useQuery(GET_ONBOARDING_ANSWERS);\n  const { onboardingAnswers } = onboardingData;\n  const { preferredName } = onboardingAnswers;\n\n  const { HIGH_SCHOOL, COLLEGE, PARENT, COUNSELOR, OTHER } = userTypes;\n\n  function handleHighSchool() {\n    onboardingAnswersVar({ ...onboardingAnswers, userType: HIGH_SCHOOL });\n    next(highSchoolFlow);\n  }\n\n  function handleCollege() {\n    onboardingAnswersVar({ ...onboardingAnswers, userType: COLLEGE });\n    next(collegeFlow);\n  }\n\n  function handleParent() {\n    onboardingAnswersVar({ ...onboardingAnswers, userType: PARENT });\n    next(parentFlow);\n  }\n\n  function handleCounselor() {\n    onboardingAnswersVar({ ...onboardingAnswers, userType: COUNSELOR });\n    next(counselorFlow);\n  }\n\n  function handleOther() {\n    onboardingAnswersVar({ ...onboardingAnswers, userType: OTHER });\n    next(otherFlow);\n  }\n\n  function handlePrevious() {\n    const copy = { ...onboardingAnswers };\n    if (copy.userType) delete copy.userType;\n    onboardingAnswersVar(copy);\n    previous();\n  }\n\n  return (\n    <div className=\"user-type-container form-container\">\n      <div className=\"form-header\">\n        <h1>{`Thanks ${preferredName}!`}</h1>\n        <h1>So, are you a...?</h1>\n      </div>\n      <div className=\"form-body\">\n        <div>\n          <div className=\"first-row\">\n            <button onClick={handleHighSchool} className=\"block-button \">\n              High School Student\n            </button>\n            <button onClick={handleCollege} className=\"block-button \">\n              College Student\n            </button>\n            <button onClick={handleParent} className=\"block-button \">\n              Parent\n            </button>\n          </div>\n          <div className=\"second-row\">\n            <button onClick={handleCounselor} className=\"block-button \">\n              Counselor, Teacher or Administrator\n            </button>\n            <button className=\"block-button\" onClick={handleOther}>\n              Other\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"onboarding-buttons\">\n        <button className=\"secondary-button\" onClick={handlePrevious}>\n          Back\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default UserType;\n","import React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\n\nimport Completion from \"./completion/Completion\";\nimport Counselor from \"./counselor/Counselor\";\nimport OtherUser from \"./otherUser/OtherUser\";\nimport Parent from \"./parent/Parent\";\nimport PreferredName from \"./preferredName/PreferredName\";\nimport SkipOnboarding from \"./skipOnboarding/SkipOnboarding\";\nimport Source from \"./source/Source\";\nimport Student from \"./student/Student\";\nimport UserType from \"./userType/UserType\";\n\nimport { GET_ME, GET_ONBOARDING_ANSWERS } from \"../../apollo/queries/account\";\n\nconst highSchoolFlow = {\n  1: \"Which school are you currently enrolled at?\",\n  2: \"What year will you be graduating high school?\",\n  3: \"What is your unweighted GPA?\",\n  4: \"What was your highest SAT score?\",\n  5: \"What was your highest ACT score?\",\n  6: \"What is your family income?\",\n  7: \"What are your preferred pronouns\",\n  8: \"How do you identify yourself?\",\n};\n\nconst collegeFlow = {\n  1: \"Which high school did you graduate from?\",\n  2: \"What year did you graduate high school?\",\n  3: \"What is your unweighted GPA?\",\n  4: \"What was your highest SAT score?\",\n  5: \"What was your highest ACT score?\",\n  6: \"What is your family income?\",\n  7: \"What are your preferred pronouns\",\n  8: \"How do you identify yourself?\",\n};\n\nconst parentFlow = {\n  1: \"What school does your child currently attend?\",\n  2: \"When is your child graduating?\",\n};\n\nconst counselorFlow = {\n  1: \"What school or district do you work at?\",\n  2: \"What year will your students graduate high school in?\",\n};\n\nconst otherFlow = {\n  1: \"Do you work at an organization that suppors students?\",\n};\n\nconst flow = {\n  1: \"Would you like to proceed or skip onboarding?\",\n  2: \"What is your preferred name?\",\n  3: \"What type of user are you?\",\n  4: { highSchoolFlow, collegeFlow, parentFlow, counselorFlow },\n  5: \"How did you hear about Tilt?\",\n  6: \"Thank you!\",\n};\n\nconst flows = {\n  highSchoolFlow,\n  collegeFlow,\n  parentFlow,\n  counselorFlow,\n  otherFlow,\n};\n\nconst userTypes = {\n  HIGH_SCHOOL: \"High School\",\n  COLLEGE: \"College\",\n  PARENT: \"Parent\",\n  COUNSELOR: \"Counselor\",\n  OTHER: \"Other\",\n};\n\nconst Onboarding = () => {\n  const { data: meData, error: meError } = useQuery(GET_ME);\n  const { data: onboardingData } = useQuery(GET_ONBOARDING_ANSWERS);\n  const { onboardingAnswers } = onboardingData;\n\n  const [flowType, setFlowType] = useState(flow);\n  const [flowIndex, setFlowIndex] = useState(1);\n\n  function next(newFlow) {\n    const indexBeforeFork = 3;\n    const indexWhenMerge = 5;\n\n    if (\n      flowType === flow &&\n      (flowIndex < indexBeforeFork || flowIndex >= indexWhenMerge)\n    ) {\n      setFlowIndex((prev) => (prev += 1));\n    }\n    if (flowType === flow && flowIndex === indexBeforeFork) {\n      setFlowType(newFlow);\n      setFlowIndex(1);\n    }\n    if (flowType !== flow && flowIndex < Object.keys(flowType).length) {\n      setFlowIndex((prev) => (prev += 1));\n    }\n    if (flowType !== flow && flowIndex === Object.keys(flowType).length) {\n      setFlowType(flow);\n      setFlowIndex(5);\n    }\n  }\n\n  function previous(newFlow) {\n    const indexBeforeFork = 3;\n    const indexWhenMerge = 5;\n    if (flowType === flow && flowIndex > 0) {\n      setFlowIndex((prev) => (prev -= 1));\n    }\n    if (flowType !== flow && flowIndex > 0) {\n      setFlowIndex((prev) => (prev -= 1));\n    }\n    if (flowType !== flow && flowIndex === 1) {\n      setFlowType(flow);\n      setFlowIndex(indexBeforeFork);\n    }\n    if (flowType === flow && flowIndex === indexWhenMerge) {\n      setFlowType(newFlow);\n      setFlowIndex(Object.keys(newFlow).length);\n    }\n  }\n\n  const props = {\n    me: meData?.me,\n    next,\n    previous,\n    flowIndex,\n  };\n\n  return (\n    <div className=\"authentication-container onboarding-container\">\n      <div className=\"authentication-left\"></div>\n      <div className=\"authentication-right\">\n        {flowType[flowIndex] === flow[1] && <SkipOnboarding {...props} />}\n        {flowType[flowIndex] === flow[2] && <PreferredName {...props} />}\n        {flowType[flowIndex] === flow[3] && (\n          <UserType {...props} {...flows} userTypes={userTypes} />\n        )}\n        {/* fork */}\n        {flowType === highSchoolFlow && <Student highSchool {...props} />}\n        {flowType === collegeFlow && <Student college {...props} />}\n        {flowType === parentFlow && <Parent {...props} />}\n        {flowType === counselorFlow && <Counselor {...props} />}\n        {flowType === otherFlow && <OtherUser {...props} />}\n        {/* merge */}\n        {flowType[flowIndex] === flow[5] && (\n          <Source {...props} flows={flows} userTypes={userTypes} />\n        )}\n        {flowType[flowIndex] === flow[6] && <Completion {...props} />}\n      </div>\n      <div style={{ position: \"absolute\" }}>\n        <ul>\n          {Object.entries(onboardingAnswers).length > 0 &&\n            Object.entries(onboardingAnswers).map(([key, value]) => (\n              <li key={`${key}:${value}`}>{`${key}:${value}`}</li>\n            ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Onboarding;\n"],"sourceRoot":""}