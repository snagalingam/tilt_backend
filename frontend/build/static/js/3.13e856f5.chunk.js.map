{"version":3,"sources":["apollo/mutations/account.js","views/onboarding/onboardingTemplate/OnboardingTemplate.jsx","views/onboarding/completion/Completion.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","views/onboarding/customTextInput/CustomTextInput.jsx","views/onboarding/graduationYear/CustomGradYear.jsx","views/onboarding/graduationYear/GradYear.jsx","views/onboarding/schoolDistrict/SchoolDistrict.jsx","views/onboarding/staff/Staff.jsx","views/onboarding/organization/OrganizationName.jsx","views/onboarding/twoOptions/TwoOptions.jsx","views/onboarding/organization/Organization.jsx","views/onboarding/otherUser/OtherUser.jsx","views/onboarding/highSchoolName/HighSchoolName.jsx","views/onboarding/parent/Parent.jsx","views/onboarding/preferredName/PreferredNameInput.jsx","views/onboarding/preferredName/PreferredName.jsx","views/onboarding/skipOnboarding/SkipOnboarding.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","views/onboarding/source/CustomSource.jsx","helper/databaseVariables.js","views/onboarding/source/Source.jsx","views/onboarding/act/ActScore.jsx","views/onboarding/act/Act.jsx","views/onboarding/ethnicity/Ethnicity.jsx","views/onboarding/familyIncome/FamilyIncome.jsx","views/onboarding/gpa/Gpa.jsx","views/onboarding/preferredPronoun/PreferredPronoun.jsx","views/onboarding/sat/SatScore.jsx","views/onboarding/sat/Sat.jsx","views/onboarding/student/Student.jsx","views/onboarding/userType/UserType.jsx","views/onboarding/Onboarding.jsx"],"names":["LOGIN","gql","SIGN_UP","ONBOARD_USER","LOGOUT_USER","OnboardingTemplate","name","h1","h1Array","p","children","previousFunc","previousText","nextFunc","nextText","className","length","map","h1x","key","onClick","Completion","useState","goToDashboard","setGoToDashboard","push","to","_defineProperty","obj","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","apply","_objectSpread2","target","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","CustomTextInput","inputRef","field","handleSubmit","customSchema","buttonText","errorMessage","defaultSchema","yup","shape","required","schema","useEffect","focus","initialValues","validationSchema","onSubmit","state","innerRef","input","type","CustomGradYear","next","previous","highSchool","onboardingAnswers","onboardingAnswersVar","highSchoolGradYear","min","max","values","GradYear","parent","staff","other","showCustomGradYear","toggleShowCustomGradYear","gradYearButton","year","SchoolDistrict","schoolDistrict","Staff","props","flowIndex","OrganizationName","toggleShowOrgInput","showGradYear","toggleShowGradYear","organizationName","TwoOptions","first","handleFirst","second","handleSecond","Organization","showOrgInput","OtherUser","HighSchoolName","highSchoolName","Parent","PreferredNameInput","toggleShowPreferredNameInput","preferredName","PreferredName","me","firstName","showPreferredNameInput","SkipOnboarding","isSkip","setIsSkip","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","CustomSource","addCustomSource","ETHNICITY","display","INCOME_QUINTILE","USER_TYPE","FOUND_FROM","K12","TRANSFER","PARENT","STAFF","OTHER","IG","FB","PARENT_SOURCE","STAFF_SOURCE","FRIEND","Source","flows","useMutation","onboardUser","onboardingData","useQuery","GET_ONBOARDING_ANSWERS","data","meData","GET_ME","userType","isCustomSource","toggleIsCustomSource","otherSource","setOther","sources","selectSources","highSchoolFlow","transferFlow","parentFlow","staffFlow","otherFlow","sourceButton","index","indexOf","option","copy","splice","handleClick","updatedOnboardingAnswers","variables","id","ActScore","act","Act","didTakeAct","setDidTakeAct","actScore","AMERICAN_INDIAN","ASIAN","BLACK","HISPANIC","ISLANDER","WHITE","TWO_OR_MORE","Ethnicity","ethnicityButton","ethnicity","LO","M1","M2","H1","H2","FamilyIncome","familyIncomeButton","incomeQuintile","Gpa","gpa","pronouns","he","she","they","PreferredPronoun","pronounButton","entries","SatScore","sat","Sat","didTakeSat","setDidTakeSat","satScore","Student","UserType","userTypeButton","console","log","1","2","3","4","5","6","7","8","flow","userTypes","HIGH_SCHOOL","Onboarding","error","flowType","setFlowType","setFlowIndex","newFlow","prev","transfer"],"mappings":"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","file":"static/js/3.13e856f5.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const LOGIN = gql`\n  mutation LoginUser($email: String!, $password: String!) {\n    loginUser(email: $email, password: $password) {\n      user {\n        email\n      }\n    }\n  }\n`;\n\nexport const SIGN_UP = gql`\n  mutation CreateUser(\n    $email: String!\n    $firstName: String\n    $lastName: String\n    $password: String!\n  ) {\n    createUser(\n      email: $email\n      firstName: $firstName\n      lastName: $lastName\n      password: $password\n    ) {\n      user {\n        firstName\n        lastName\n        email\n      }\n    }\n  }\n`;\n\nexport const ONBOARD_USER = gql`\n  mutation OnboardUser(\n    $id: ID\n    $gpa: Float\n    $actScore: Int\n    $satScore: Int\n    $termsAndConditions: Boolean\n    $pronouns: String\n    $ethnicity: String\n    $userType: String\n    $highSchoolGradYear: Int\n  ) {\n    onboardUser(\n      id: $id\n      gpa: $gpa\n      actScore: $actScore\n      satScore: $satScore\n      termsAndConditions: $termsAndConditions\n      pronouns: $pronouns\n      ethnicity: $ethnicity\n      userType: $userType\n      highSchoolGradYear: $highSchoolGradYear\n    ) {\n      user {\n        email\n        firstName\n        lastName\n        email\n      }\n    }\n  }\n`;\n\nexport const LOGOUT_USER = gql`\n  mutation LogoutUser {\n    logoutUser {\n      user {\n        email\n      }\n    }\n  }\n`;\n","import React from \"react\";\n\nconst OnboardingTemplate = ({\n  name,\n  h1,\n  h1Array,\n  p,\n  children,\n  previousFunc,\n  previousText = \"Back\",\n  nextFunc,\n  nextText = \"Continue\",\n}) => {\n  return (\n    <div className={`${name}-container form-container`}>\n      <div className=\"form-header\">\n        {h1 && <h1>{h1}</h1>}\n        {h1Array?.length > 0 && h1Array.map((h1x) => <h1 key={h1x}>{h1x}</h1>)}\n        {p && <p>{p}</p>}\n      </div>\n      {children && <div className=\"form-body\">{children}</div>}\n      <div className=\"onboarding-buttons\">\n        {nextFunc && <button onClick={nextFunc}>{nextText}</button>}\n        {previousFunc && (\n          <button className=\"secondary-button\" onClick={previousFunc}>\n            {previousText}\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default OnboardingTemplate;\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\n\nconst Completion = () => {\n  const [goToDashboard, setGoToDashboard] = useState(false);\n\n  if (goToDashboard) return <Redirect push to=\"/dashboard\" />;\n\n  return (\n    <OnboardingTemplate\n      name=\"completion\"\n      h1=\"That's it!\"\n      p=\" We are now set to find you some affordable colleges, so you don't\n    graduate with $$$ in debt.\"\n      nextFunc={() => setGoToDashboard(true)}\n      nextText=\"Go to Dashboard\"\n    />\n  );\n};\n\nexport default Completion;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React, { useEffect } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as yup from \"yup\";\n\nimport \"./custom-text-input.scss\";\n\nconst CustomTextInput = ({\n  field,\n  handleSubmit,\n  customSchema,\n  buttonText = \"Continue\",\n  errorMessage = \"Please enter your information\",\n}) => {\n  const defaultSchema = yup.object().shape({\n    [field]: yup.string().required(errorMessage),\n  });\n  const schema = customSchema ? customSchema : defaultSchema;\n\n  let inputRef;\n  useEffect(() => {\n    if (inputRef) {\n      inputRef.focus();\n    }\n  });\n\n  return (\n    <Formik\n      initialValues={{\n        [field]: \"\",\n      }}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      {(state) => (\n        <Form className=\"custom-text-input\">\n          <Field name={field} innerRef={(input) => (inputRef = input)}></Field>\n          {/* {state.errors && state.touched && (\n            <span className=\"custom-text-input-error\">\n              {state.errors[field]}\n            </span>\n          )} */}\n          <button type=\"submit\">{buttonText}</button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default CustomTextInput;\n","import React from \"react\";\nimport * as yup from \"yup\";\n\nimport CustomTextInput from \"../customTextInput/CustomTextInput\";\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\n\nimport { onboardingAnswersVar } from \"../../../apollo/reactiveVariables/account\";\n\nconst CustomGradYear = ({ next, previous, highSchool }) => {\n  const onboardingAnswers = { ...onboardingAnswersVar() };\n\n  function handleSubmit(values) {\n    const { highSchoolGradYear } = values;\n    onboardingAnswersVar({ ...onboardingAnswers, highSchoolGradYear });\n    next();\n  }\n\n  function handlePrevious() {\n    if (onboardingAnswers?.highSchoolGradYear) {\n      delete onboardingAnswers.highSchoolGradYear;\n      onboardingAnswersVar(onboardingAnswers);\n    }\n    previous();\n  }\n\n  const schema = yup.object().shape({\n    highSchoolGradYear: yup\n      .number()\n      .min(\"2000\")\n      .max(\"2025\")\n      .required(\"Please enter the year you graduated\"),\n  });\n\n  return (\n    <OnboardingTemplate\n      name=\"grad-year\"\n      h1={\n        highSchool ? \"When are you graduating?\" : \"What year did you graduate?\"\n      }\n      previousFunc={handlePrevious}\n    >\n      <CustomTextInput\n        field=\"highSchoolGradYear\"\n        handleSubmit={handleSubmit}\n        customSchema={schema}\n      />\n    </OnboardingTemplate>\n  );\n};\n\nexport default CustomGradYear;\n","import React, { useState } from \"react\";\n\nimport CustomGradYear from \"./CustomGradYear\";\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\n\nimport { onboardingAnswersVar } from \"../../../apollo/reactiveVariables/account\";\n\nimport \"./grad-year.scss\";\n\nconst GradYear = ({ highSchool, parent, staff, other, next, previous }) => {\n  const [showCustomGradYear, toggleShowCustomGradYear] = useState(false);\n  const onboardingAnswers = { ...onboardingAnswersVar() };\n\n  function handleNext(highSchoolGradYear) {\n    onboardingAnswersVar({ ...onboardingAnswers, highSchoolGradYear });\n    next();\n  }\n\n  function handlePrevious() {\n    if (onboardingAnswers?.highSchoolGradYear) {\n      delete onboardingAnswers.highSchoolGradYear;\n      onboardingAnswersVar(onboardingAnswers);\n    }\n    previous();\n  }\n\n  const gradYearButton = (year) => (\n    <button onClick={() => handleNext(year)} className=\"block-button \">\n      {year}\n    </button>\n  );\n\n  if (showCustomGradYear)\n    return (\n      <CustomGradYear\n        next={next}\n        previous={() => toggleShowCustomGradYear(false)}\n      />\n    );\n\n  return (\n    <OnboardingTemplate\n      name=\"user-type\"\n      h1={\n        highSchool\n          ? \"When will you be graduating high school?\"\n          : parent\n          ? \"When is your child graduating?\"\n          : staff || other\n          ? \"What year will your students graduate high school in?\"\n          : \"When did you graduate from high school?\"\n      }\n      previousFunc={handlePrevious}\n    >\n      <div>\n        <div className=\"first-row\">\n          {gradYearButton(2021)}\n          {gradYearButton(2022)}\n          {gradYearButton(2023)}\n        </div>\n        <div className=\"second-row\">\n          {gradYearButton(2023)}\n          <button\n            className=\"block-button\"\n            onClick={() => toggleShowCustomGradYear(true)}\n          >\n            Other\n          </button>\n        </div>\n      </div>\n    </OnboardingTemplate>\n  );\n};\n\nexport default GradYear;\n","import React from \"react\";\n\nimport CustomTextInput from \"../customTextInput/CustomTextInput\";\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\n\nimport { onboardingAnswersVar } from \"../../../apollo/reactiveVariables/account\";\n\nimport \"./school-district.scss\";\n\nconst SchoolDistrict = ({ previous, next }) => {\n  const onboardingAnswers = { ...onboardingAnswersVar() };\n\n  function handleSubmit(values) {\n    const { schoolDistrict } = values;\n    onboardingAnswersVar({ ...onboardingAnswers, schoolDistrict });\n    next();\n  }\n\n  function handlePrevious() {\n    if (onboardingAnswers?.schoolDistrict) {\n      delete onboardingAnswers.schoolDistrict;\n      onboardingAnswersVar(onboardingAnswers);\n    }\n    previous();\n  }\n  return (\n    <OnboardingTemplate\n      name=\"school-district\"\n      h1=\"What school or district do you work at?\"\n      previousFunc={handlePrevious}\n    >\n      <CustomTextInput\n        field=\"schoolDistrict\"\n        handleSubmit={handleSubmit}\n        errorMessage=\"Please enter a school or district name\"\n      />\n    </OnboardingTemplate>\n  );\n};\n\nexport default SchoolDistrict;\n","import React from \"react\";\n\nimport GradYear from \"../graduationYear/GradYear\";\nimport SchoolDistrict from \"../schoolDistrict/SchoolDistrict\";\n\nconst Staff = (props) => {\n  const { flowIndex } = props;\n  return (\n    <div className=\"staff-container\">\n      {flowIndex === 1 && <SchoolDistrict {...props} />}\n      {flowIndex === 2 && <GradYear staff {...props} />}\n    </div>\n  );\n};\n\nexport default Staff;\n","import React, { useState } from \"react\";\n\nimport CustomTextInput from \"../customTextInput/CustomTextInput\";\nimport GradYear from \"../graduationYear/GradYear\";\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\n\nimport { onboardingAnswersVar } from \"../../../apollo/reactiveVariables/account\";\n\nimport \"./organization.scss\";\n\nconst OrganizationName = ({ next, toggleShowOrgInput }) => {\n  const [showGradYear, toggleShowGradYear] = useState(false);\n  const onboardingAnswers = { ...onboardingAnswersVar() };\n\n  function handleSubmit(values) {\n    const { organizationName } = values;\n    onboardingAnswersVar({ ...onboardingAnswers, organizationName });\n    toggleShowGradYear(true);\n  }\n\n  function handlePrevious() {\n    if (onboardingAnswers?.organizationName) {\n      delete onboardingAnswers.organizationName;\n    }\n    if (onboardingAnswers?.highSchoolGradYear) {\n      delete onboardingAnswers.highSchoolGradYear;\n    }\n    onboardingAnswersVar(onboardingAnswers);\n    toggleShowOrgInput(false);\n  }\n\n  if (showGradYear)\n    return (\n      <GradYear other next={next} previous={() => toggleShowGradYear(false)} />\n    );\n\n  return (\n    <OnboardingTemplate\n      name=\"organization-name\"\n      h1=\"What organization do you work at?\"\n      previousFunc={handlePrevious}\n    >\n      <CustomTextInput\n        field=\"organizationName\"\n        handleSubmit={handleSubmit}\n        errorMessage=\"Please enter your organization name.\"\n      />\n    </OnboardingTemplate>\n  );\n};\n\nexport default OrganizationName;\n","import React from \"react\";\n\nimport \"./two-options.scss\";\n\nconst TwoOptions = ({ first, handleFirst, second, handleSecond }) => {\n  return (\n    <div className=\"two-options\">\n      <button className=\"block-button\" onClick={handleFirst}>\n        {first}\n      </button>\n      <button className=\"block-button\" onClick={handleSecond}>\n        {second}\n      </button>\n    </div>\n  );\n};\n\nexport default TwoOptions;\n","import React, { useState } from \"react\";\n\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\nimport OrganizationName from \"./OrganizationName\";\nimport TwoOptions from \"../twoOptions/TwoOptions\";\n\nimport { onboardingAnswersVar } from \"../../../apollo/reactiveVariables/account\";\n\nconst Organization = ({ next, previous }) => {\n  const [showOrgInput, toggleShowOrgInput] = useState(false);\n  const onboardingAnswers = { ...onboardingAnswersVar() };\n\n  function handlePrevious() {\n    if (onboardingAnswers?.organizationName) {\n      delete onboardingAnswers.organizationName;\n    }\n    if (onboardingAnswers?.highSchoolGradYear) {\n      delete onboardingAnswers.highSchoolGradYear;\n    }\n    onboardingAnswersVar(onboardingAnswers);\n    previous();\n  }\n\n  if (showOrgInput)\n    return (\n      <OrganizationName\n        next={next}\n        previous={previous}\n        toggleShowOrgInput={toggleShowOrgInput}\n      />\n    );\n\n  return (\n    <OnboardingTemplate\n      name=\"organization\"\n      h1=\"Do you work at an organization that supports students?\"\n      previousFunc={handlePrevious}\n    >\n      <TwoOptions\n        first=\"Yes\"\n        handleFirst={() => toggleShowOrgInput(true)}\n        second=\"No\"\n        handleSecond={next}\n      />\n    </OnboardingTemplate>\n  );\n};\n\nexport default Organization;\n","import React from \"react\";\n\nimport Organization from \"../organization/Organization\";\n\nconst OtherUser = (props) => {\n  const { flowIndex } = props;\n\n  return (\n    <div className=\"other-user-container\">\n      {flowIndex === 1 && <Organization {...props} />}\n    </div>\n  );\n};\n\nexport default OtherUser;\n","import React from \"react\";\n\nimport CustomTextInput from \"../customTextInput/CustomTextInput\";\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\n\nimport { onboardingAnswersVar } from \"../../../apollo/reactiveVariables/account\";\n\nimport \"./high-school-name.scss\";\n\nconst HighSchoolName = ({ next, previous, highSchool, parent }) => {\n  const onboardingAnswers = { ...onboardingAnswersVar() };\n\n  function handleSubmit(values) {\n    const { highSchoolName } = values;\n    onboardingAnswersVar({ ...onboardingAnswers, highSchoolName });\n    next();\n  }\n\n  function handlePrevious() {\n    if (onboardingAnswers?.highSchoolName) {\n      delete onboardingAnswers.highSchoolName;\n      onboardingAnswersVar({ ...onboardingAnswers });\n    }\n    previous();\n  }\n\n  return (\n    <OnboardingTemplate\n      name=\"high-school-name\"\n      h1={\n        highSchool\n          ? \"What high school do you currently attend?\"\n          : parent\n          ? \"What high school does your child currently attend?\"\n          : \"What high school did you graduate from?\"\n      }\n      previousFunc={handlePrevious}\n    >\n      <CustomTextInput\n        field=\"highSchoolName\"\n        handleSubmit={handleSubmit}\n        errorMessage=\"Please enter your high school name.\"\n      />\n    </OnboardingTemplate>\n  );\n};\n\nexport default HighSchoolName;\n","import React from \"react\";\n\nimport HighSchoolName from \"../highSchoolName/HighSchoolName\";\nimport GradYear from \"../graduationYear/GradYear\";\n\nconst Parent = (props) => {\n  const { flowIndex } = props;\n  return (\n    <div className=\"parent-container\">\n      {flowIndex === 1 && <HighSchoolName {...props} parent />}\n      {flowIndex === 2 && <GradYear {...props} parent />}\n    </div>\n  );\n};\n\nexport default Parent;\n","import React from \"react\";\n\nimport CustomTextInput from \"../customTextInput/CustomTextInput\";\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\n\nimport { onboardingAnswersVar } from \"../../../apollo/reactiveVariables/account\";\n\nconst PreferredNameInput = ({ next, toggleShowPreferredNameInput }) => {\n  const onboardingAnswers = { ...onboardingAnswersVar() };\n\n  function handleSubmit(values) {\n    const { preferredName } = values;\n    if (onboardingAnswers) {\n      onboardingAnswersVar({ ...onboardingAnswers, preferredName });\n    } else {\n      onboardingAnswersVar({ preferredName });\n    }\n    next();\n  }\n\n  function handlePrevious() {\n    if (onboardingAnswers?.preferredName) {\n      delete onboardingAnswers.preferredName;\n      onboardingAnswersVar({ ...onboardingAnswers });\n    }\n    toggleShowPreferredNameInput(false);\n  }\n\n  return (\n    <OnboardingTemplate\n      name=\"preferred-name\"\n      h1=\"Please enter your preferred name\"\n      previousFunc={handlePrevious}\n    >\n      <CustomTextInput\n        field=\"preferredName\"\n        handleSubmit={handleSubmit}\n        errorMessage=\"Please enter your preferred name.\"\n      />\n    </OnboardingTemplate>\n  );\n};\n\nexport default PreferredNameInput;\n","import React, { useState } from \"react\";\n\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\nimport PreferredNameInput from \"./PreferredNameInput\";\nimport TwoOptions from \"../twoOptions/TwoOptions\";\n\nimport { onboardingAnswersVar } from \"../../../apollo/reactiveVariables/account\";\n\nimport \"./preferred-name.scss\";\n\nconst PreferredName = ({ me, previous, next }) => {\n  const firstName = me ? me?.firstName : \"anonymous\";\n  const [showPreferredNameInput, toggleShowPreferredNameInput] = useState(\n    false\n  );\n  const onboardingAnswers = { ...onboardingAnswersVar() };\n\n  function handleNext() {\n    if (onboardingAnswers?.preferredName) {\n      delete onboardingAnswers.preferredName;\n      onboardingAnswersVar(onboardingAnswers);\n    }\n    next();\n  }\n\n  function handlePrevious() {\n    if (onboardingAnswers?.preferredName) {\n      delete onboardingAnswers.preferredName;\n      onboardingAnswersVar(onboardingAnswers);\n    }\n    previous();\n  }\n\n  if (showPreferredNameInput)\n    return (\n      <PreferredNameInput\n        next={next}\n        previous={previous}\n        toggleShowPreferredNameInput={toggleShowPreferredNameInput}\n      />\n    );\n\n  return (\n    <OnboardingTemplate\n      name=\"preferred-name-options\"\n      h1={`Should we call you ${firstName}, or do you have another preferred name?`}\n      previousFunc={handlePrevious}\n    >\n      <TwoOptions\n        first=\"Yes\"\n        handleFirst={handleNext}\n        second=\"Other Name\"\n        handleSecond={() => toggleShowPreferredNameInput(true)}\n      />\n    </OnboardingTemplate>\n  );\n};\n\nexport default PreferredName;\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\n\nconst SkipOnboarding = ({ me = {}, next }) => {\n  const { firstName = \"default\" } = me;\n  const [isSkip, setIsSkip] = useState(false);\n\n  if (isSkip) return <Redirect push to=\"/dashboard\" />;\n\n  return (\n    <OnboardingTemplate\n      name=\"skip-onboarding\"\n      h1={`Hi, ${firstName}`}\n      p=\"To help personalize your experience, we need a bit more information\"\n      nextFunc={next}\n      nextText=\"Let's Start\"\n      previousFunc={() => setIsSkip(true)}\n      previousText=\"Skip for Now\"\n    />\n  );\n};\n\nexport default SkipOnboarding;\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from \"react\";\n\nimport CustomTextInput from \"../customTextInput/CustomTextInput\";\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\n\nconst CustomSource = ({ previous, addCustomSource }) => {\n  function handleSubmit(value) {\n    const { source } = value;\n    addCustomSource(source);\n    previous();\n  }\n\n  return (\n    <OnboardingTemplate\n      name=\"custom-source\"\n      h1=\"How did you hear about Tilt?\"\n      previousFunc={previous}\n    >\n      <CustomTextInput\n        field=\"source\"\n        handleSubmit={handleSubmit}\n        errorMessage=\"Source missing.\"\n      />\n    </OnboardingTemplate>\n  );\n};\n\nexport default CustomSource;\n","export const ETHNICITY = {\n  AMERICAN_INDIAN: {\n    display: \"American Indian/Alaska Native\",\n    value: \"american indian and alaska native\",\n  },\n  ASIAN: { display: \"Asian\", value: \"asian\" },\n  BLACK: { display: \"Black/African\", value: \"black and african\" },\n  HISPANIC: { display: \"Hispanic/Latinx\", value: \"hispanic and latinx\" },\n  ISLANDER: {\n    display: \"Native Hawaiian/Pacific Islander\",\n    value: \"native hawaiian and pacific islander\",\n  },\n  TWO_OR_MORE: {\n    display: \"Two or More Races\",\n    value: \"two ore more races\",\n  },\n  OTHER: { display: \"Other\", value: \"other\" },\n  WHITE: { display: \"White\", value: \"white\" },\n};\n\nexport const INCOME_QUINTILE = {\n  LO: { display: \"$0 - 30,000\", value: \"lo\" },\n  M1: { display: \"$30,001 - $48,000\", value: \"m1\" },\n  M2: { display: \"$48,001 - $75,000\", value: \"m2\" },\n  H1: { display: \"$75,001 - $110,000\", value: \"h1\" },\n  H2: { display: \"$110,000+\", value: \"h2\" },\n};\n\nexport const USER_TYPE = {\n  K12: { display: \"K-12 Student\", value: \"student\" },\n  TRANSFER: { display: \"Transfer Student\", value: \"transfer\" },\n  PARENT: { display: \"Parent\", value: \"parent\" },\n  STAFF: { display: \"School or District Staff\", value: \"staff\" },\n  OTHER: { display: \"Other\", value: \"other\" },\n};\n\nexport const FOUND_FROM = {\n  IG: { display: \"Instagram\", value: \"instagram\" },\n  FB: { display: \"Facebook\", value: \"facebook\" },\n  PARENT_SOURCE: { display: \"Parent\", value: \"parent\" },\n  STAFF_SOURCE: {\n    display: \"School or District Staff\",\n    value: \"school or district staff\",\n  },\n  FRIEND: { display: \"Friend\", value: \"friend\" },\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/client\";\n\nimport CustomSource from \"./CustomSource\";\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\n\nimport { ONBOARD_USER } from \"../../../apollo/mutations/account\";\nimport {\n  GET_ONBOARDING_ANSWERS,\n  GET_ME,\n} from \"../../../apollo/queries/account\";\nimport { onboardingAnswersVar } from \"../../../apollo/reactiveVariables/account\";\nimport { USER_TYPE, FOUND_FROM } from \"../../../helper/databaseVariables\";\n\nimport \"./source.scss\";\n\nconst { K12, TRANSFER, PARENT, STAFF, OTHER } = USER_TYPE;\nconst { IG, FB, PARENT_SOURCE, STAFF_SOURCE, FRIEND } = FOUND_FROM;\n\nconst Source = ({ previous, next, flows }) => {\n  const [onboardUser, response] = useMutation(ONBOARD_USER);\n  const { data: onboardingData } = useQuery(GET_ONBOARDING_ANSWERS);\n  const { data: meData } = useQuery(GET_ME);\n  const { onboardingAnswers } = onboardingData;\n  const { userType } = onboardingAnswers;\n\n  const [isCustomSource, toggleIsCustomSource] = useState(false);\n  const [otherSource, setOther] = useState(null);\n  const [sources, selectSources] = useState([]);\n\n  const {\n    highSchoolFlow,\n    transferFlow,\n    parentFlow,\n    staffFlow,\n    otherFlow,\n  } = flows;\n\n  function handlePrevious() {\n    switch (userType) {\n      case K12.value:\n        previous(highSchoolFlow);\n        break;\n      case TRANSFER.value:\n        previous(transferFlow);\n        break;\n      case PARENT.value:\n        previous(parentFlow);\n        break;\n      case STAFF.value:\n        previous(staffFlow);\n        break;\n      case OTHER.value:\n        const copy = { ...onboardingAnswers };\n        if (copy?.organizationName) delete copy.organizationName;\n        if (copy?.highSchoolGradYear) delete copy.highSchoolGradYear;\n        onboardingAnswersVar(copy);\n        previous(otherFlow);\n        break;\n      default:\n    }\n  }\n\n  function handleClick(option) {\n    const copy = [...sources];\n    const index = copy.indexOf(option);\n    if (index >= 0) {\n      copy.splice(index, 1);\n    } else {\n      copy.push(option);\n    }\n    selectSources(copy);\n  }\n\n  const sourceButton = ({ display, value }) => {\n    const index = sources.indexOf(value);\n    return (\n      <button\n        key={value}\n        onClick={() => handleClick(value)}\n        className={`block-button${index >= 0 ? \" selected\" : \"\"}`}\n      >\n        {display}\n      </button>\n    );\n  };\n\n  function handleSave() {\n    const copy = [...sources];\n    const index = copy.indexOf(otherSource);\n    if (index < 0 && otherSource) {\n      copy.push(otherSource);\n    }\n    selectSources(copy);\n    const updatedOnboardingAnswers = { ...onboardingAnswers, sources: copy };\n    onboardingAnswersVar(updatedOnboardingAnswers);\n    onboardUser({\n      variables: { ...updatedOnboardingAnswers, id: meData?.me?.id },\n    });\n    next();\n  }\n\n  if (isCustomSource)\n    return (\n      <CustomSource\n        previous={() => toggleIsCustomSource(false)}\n        addCustomSource={setOther}\n      />\n    );\n\n  return (\n    <OnboardingTemplate\n      name=\"source\"\n      h1=\"How did you hear about Tilt?\"\n      nextFunc={handleSave}\n      previousFunc={handlePrevious}\n    >\n      <div>\n        <div className=\"first-row\">\n          {[IG, FB, PARENT_SOURCE].map((object) => sourceButton(object))}\n        </div>\n        <div className=\"second-row\">\n          {[STAFF_SOURCE, FRIEND].map((source) => sourceButton(source))}\n          <button\n            className={`block-button${otherSource ? \" selected\" : \"\"}`}\n            onClick={() => toggleIsCustomSource(true)}\n          >\n            {otherSource || \"Other\"}\n          </button>\n        </div>\n      </div>\n    </OnboardingTemplate>\n  );\n};\n\nexport default Source;\n","import React from \"react\";\nimport * as yup from \"yup\";\n\nimport CustomTextInput from \"../customTextInput/CustomTextInput\";\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\n\nimport { onboardingAnswersVar } from \"../../../apollo/reactiveVariables/account\";\n\nconst ActScore = ({ next, previous }) => {\n  const onboardingAnswers = { ...onboardingAnswersVar() };\n\n  function handleSubmit(values) {\n    const { act } = values;\n    onboardingAnswersVar({ ...onboardingAnswers, act });\n    next();\n  }\n\n  function handlePrevious() {\n    if (onboardingAnswers?.act) {\n      delete onboardingAnswers.act;\n      onboardingAnswersVar(onboardingAnswers);\n    }\n    previous();\n  }\n\n  const schema = yup.object().shape({\n    act: yup.number().min(1).max(36).required(\"Please enter a valid score\"),\n  });\n\n  return (\n    <OnboardingTemplate\n      name=\"act-score\"\n      h1=\"What was your highest ACT score?\"\n      previousFunc={handlePrevious}\n    >\n      <CustomTextInput\n        field=\"act\"\n        handleSubmit={handleSubmit}\n        customSchema={schema}\n      />\n    </OnboardingTemplate>\n  );\n};\n\nexport default ActScore;\n","import React, { useState } from \"react\";\n\nimport ActScore from \"./ActScore\";\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\nimport TwoOptions from \"../twoOptions/TwoOptions\";\n\nimport { onboardingAnswersVar } from \"../../../apollo/reactiveVariables/account\";\n\nimport \"./act.scss\";\n\nconst Act = ({ next, previous }) => {\n  const [didTakeAct, setDidTakeAct] = useState(false);\n  const onboardingAnswers = { ...onboardingAnswersVar() };\n\n  function handlePrevious() {\n    if (onboardingAnswers?.actScore) {\n      delete onboardingAnswers.actScore;\n      onboardingAnswersVar(onboardingAnswers);\n    }\n    previous();\n  }\n\n  if (didTakeAct)\n    return <ActScore next={next} previous={() => setDidTakeAct(false)} />;\n\n  return (\n    <OnboardingTemplate\n      name=\"act\"\n      h1=\"Have you taken the ACT yet?\"\n      previousFunc={handlePrevious}\n    >\n      <TwoOptions\n        first=\"Yes\"\n        handleFirst={() => setDidTakeAct(true)}\n        second=\"No\"\n        handleSecond={next}\n      />\n    </OnboardingTemplate>\n  );\n};\n\nexport default Act;\n","import React from \"react\";\n\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\n\nimport { onboardingAnswersVar } from \"../../../apollo/reactiveVariables/account\";\nimport { ETHNICITY } from \"../../../helper/databaseVariables\";\n\nimport \"./ethnicity.scss\";\n\nconst {\n  AMERICAN_INDIAN,\n  ASIAN,\n  BLACK,\n  HISPANIC,\n  ISLANDER,\n  WHITE,\n  TWO_OR_MORE,\n  OTHER,\n} = ETHNICITY;\n\nconst Ethnicity = ({ previous, next }) => {\n  const onboardingAnswers = { ...onboardingAnswersVar() };\n\n  function handleClick(ethnicity) {\n    onboardingAnswersVar({ ...onboardingAnswers, ethnicity });\n    next();\n  }\n\n  function handlePreferNotToAnswer() {\n    onboardingAnswersVar({\n      ...onboardingAnswers,\n      ethnicity: \"Prefer not to answer\",\n    });\n    next();\n  }\n\n  function handlePrevious() {\n    if (onboardingAnswers?.ethnicity) {\n      delete onboardingAnswers.ethnicity;\n      onboardingAnswersVar(onboardingAnswers);\n    }\n    previous();\n  }\n\n  const ethnicityButton = ({ display, value }) => {\n    return (\n      <button\n        key={value}\n        onClick={() => handleClick(value)}\n        className=\"block-button\"\n      >\n        {display}\n      </button>\n    );\n  };\n\n  return (\n    <OnboardingTemplate\n      name=\"ethnicity\"\n      h1=\"Which ethnicities do you identify with?\"\n      previousFunc={handlePrevious}\n      nextText={\"Prefer not to answer\"}\n      nextFunc={handlePreferNotToAnswer}\n    >\n      <div>\n        <div className=\"first-row\">\n          {[AMERICAN_INDIAN, ASIAN, BLACK, HISPANIC].map((object) =>\n            ethnicityButton(object)\n          )}\n        </div>\n        <div className=\"second-row\">\n          {[ISLANDER, WHITE, TWO_OR_MORE, OTHER].map((object) =>\n            ethnicityButton(object)\n          )}\n        </div>\n      </div>\n    </OnboardingTemplate>\n  );\n};\n\nexport default Ethnicity;\n","import React from \"react\";\n\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\n\nimport { onboardingAnswersVar } from \"../../../apollo/reactiveVariables/account\";\nimport { INCOME_QUINTILE } from \"../../../helper/databaseVariables\";\n\nimport \"./family-income.scss\";\n\nconst { LO, M1, M2, H1, H2 } = INCOME_QUINTILE;\n\nconst FamilyIncome = ({ next, previous }) => {\n  const onboardingAnswers = { ...onboardingAnswersVar() };\n\n  function handleClick(incomeQuintile) {\n    onboardingAnswersVar({ ...onboardingAnswers, incomeQuintile });\n    next();\n  }\n\n  function handlePrevious() {\n    if (onboardingAnswers?.incomeQuintile) {\n      delete onboardingAnswers.incomeQuintile;\n      onboardingAnswersVar(onboardingAnswers);\n    }\n    previous();\n  }\n\n  const familyIncomeButton = ({ display, value }) => (\n    <button\n      className=\"block-button\"\n      key={value}\n      onClick={() => handleClick(value)}\n    >\n      {display}\n    </button>\n  );\n\n  return (\n    <OnboardingTemplate\n      name=\"family-income\"\n      h1=\"What is your family income?\"\n      previousFunc={handlePrevious}\n    >\n      <div>\n        <div className=\"first-row\">\n          {[LO, M1, M2].map((object) => familyIncomeButton(object))}\n        </div>\n        <div className=\"second-row\">\n          {[H1, H2].map((object) => familyIncomeButton(object))}\n        </div>\n      </div>\n    </OnboardingTemplate>\n  );\n};\n\nexport default FamilyIncome;\n","import React from \"react\";\nimport * as yup from \"yup\";\n\nimport CustomTextInput from \"../customTextInput/CustomTextInput\";\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\n\nimport { onboardingAnswersVar } from \"../../../apollo/reactiveVariables/account\";\n\nimport \"./gpa.scss\";\n\nconst Gpa = ({ next, previous }) => {\n  const onboardingAnswers = { ...onboardingAnswersVar() };\n\n  function handleSubmit(values) {\n    const { gpa } = values;\n    onboardingAnswersVar({ ...onboardingAnswers, gpa });\n    next();\n  }\n\n  function handlePrevious() {\n    if (onboardingAnswers?.gpa) {\n      delete onboardingAnswers.gpa;\n      onboardingAnswersVar(onboardingAnswers);\n    }\n    previous();\n  }\n\n  const schema = yup.object().shape({\n    gpa: yup.number().min(0).max(6).required(\"Please enter a valid GPA\"),\n  });\n\n  return (\n    <OnboardingTemplate\n      name=\"gpa\"\n      h1=\"What is your unweighted GPA?\"\n      previousFunc={handlePrevious}\n    >\n      <CustomTextInput\n        field=\"gpa\"\n        handleSubmit={handleSubmit}\n        customSchema={schema}\n      />\n    </OnboardingTemplate>\n  );\n};\n\nexport default Gpa;\n","import React from \"react\";\n\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\n\nimport { onboardingAnswersVar } from \"../../../apollo/reactiveVariables/account\";\n\nimport \"./preferred-pronoun.scss\";\n\nconst pronouns = {\n  he: \"He\",\n  she: \"She\",\n  they: \"They\",\n  other: \"Other\",\n};\n\nconst PreferredPronoun = ({ next, previous }) => {\n  const onboardingAnswers = { ...onboardingAnswersVar() };\n\n  function handleClick(option) {\n    onboardingAnswersVar({ ...onboardingAnswers, pronouns: option });\n    next();\n  }\n\n  function handlePrevious() {\n    if (onboardingAnswers.pronouns) {\n      delete onboardingAnswers.pronouns;\n      onboardingAnswersVar(onboardingAnswers);\n    }\n    previous();\n  }\n\n  const pronounButton = (key, value) => (\n    <button\n      key={`${key}:${value}`}\n      onClick={() => handleClick(key)}\n      className=\"block-button\"\n    >\n      {value}\n    </button>\n  );\n\n  return (\n    <OnboardingTemplate\n      name=\"preferred-pronoun\"\n      h1=\"What is your preferred pronoun?\"\n      previousFunc={handlePrevious}\n    >\n      <div>\n        {Object.entries(pronouns).map(([key, value]) =>\n          pronounButton(key, value)\n        )}\n      </div>\n    </OnboardingTemplate>\n  );\n};\n\nexport default PreferredPronoun;\n","import React from \"react\";\nimport * as yup from \"yup\";\n\nimport CustomTextInput from \"../customTextInput/CustomTextInput\";\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\n\nimport { onboardingAnswersVar } from \"../../../apollo/reactiveVariables/account\";\n\nimport \"./sat.scss\";\n\nconst SatScore = ({ next, previous }) => {\n  const onboardingAnswers = { ...onboardingAnswersVar() };\n\n  function handleSubmit(values) {\n    const { sat } = values;\n    onboardingAnswersVar({ ...onboardingAnswers, sat });\n    next();\n  }\n\n  function handlePrevious() {\n    if (onboardingAnswers?.sat) {\n      delete onboardingAnswers.sat;\n      onboardingAnswersVar(onboardingAnswers);\n    }\n    previous();\n  }\n\n  const schema = yup.object().shape({\n    sat: yup.number().min(400).max(1600).required(\"Please enter a valid score\"),\n  });\n\n  return (\n    <OnboardingTemplate\n      name=\"sat-score\"\n      h1=\"What was your highest SAT score?\"\n      previousFunc={handlePrevious}\n    >\n      <CustomTextInput\n        field=\"sat\"\n        handleSubmit={handleSubmit}\n        customSchema={schema}\n      />\n    </OnboardingTemplate>\n  );\n};\n\nexport default SatScore;\n","import React, { useState } from \"react\";\n\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\nimport SatScore from \"./SatScore\";\nimport TwoOptions from \"../twoOptions/TwoOptions\";\n\nimport { onboardingAnswersVar } from \"../../../apollo/reactiveVariables/account\";\n\nconst Sat = ({ next, previous }) => {\n  const [didTakeSat, setDidTakeSat] = useState(false);\n  const onboardingAnswers = { ...onboardingAnswersVar() };\n\n  function handlePrevious() {\n    if (onboardingAnswers?.satScore) {\n      delete onboardingAnswers.satScore;\n      onboardingAnswersVar(onboardingAnswers);\n    }\n    previous();\n  }\n\n  if (didTakeSat)\n    return <SatScore next={next} previous={() => setDidTakeSat(false)} />;\n\n  return (\n    <OnboardingTemplate\n      name=\"sat\"\n      h1=\"Have you taken the SAT yet?\"\n      previousFunc={handlePrevious}\n    >\n      <TwoOptions\n        first=\"Yes\"\n        handleFirst={() => setDidTakeSat(true)}\n        second=\"No\"\n        handleSecond={next}\n      />\n    </OnboardingTemplate>\n  );\n};\n\nexport default Sat;\n","import React from \"react\";\n\nimport Act from \"../act/Act\";\nimport ActScore from \"../act/ActScore\";\nimport Ethnicity from \"../ethnicity/Ethnicity\";\nimport FamilyIncome from \"../familyIncome/FamilyIncome\";\nimport Gpa from \"../gpa/Gpa\";\nimport GradYear from \"../graduationYear/GradYear\";\nimport HighSchoolName from \"../highSchoolName/HighSchoolName\";\nimport PreferredPronoun from \"../preferredPronoun/PreferredPronoun\";\nimport Sat from \"../sat/Sat\";\nimport SatScore from \"../sat/SatScore\";\n\nconst Student = (props) => {\n  const { flowIndex, highSchool } = props;\n\n  return (\n    <div className=\"student-container\">\n      {flowIndex === 1 && <HighSchoolName {...props} />}\n      {flowIndex === 2 && <GradYear {...props} />}\n      {flowIndex === 3 && <Gpa {...props} />}\n      {flowIndex === 4 &&\n        (highSchool ? <Sat {...props} /> : <SatScore {...props} />)}\n      {flowIndex === 5 &&\n        (highSchool ? <Act {...props} /> : <ActScore {...props} />)}\n      {flowIndex === 6 && <FamilyIncome {...props} />}\n      {flowIndex === 7 && <PreferredPronoun {...props} />}\n      {flowIndex === 8 && <Ethnicity {...props} />}\n    </div>\n  );\n};\n\nexport default Student;\n","import React from \"react\";\nimport { useQuery } from \"@apollo/client\";\n\nimport { GET_ONBOARDING_ANSWERS } from \"../../../apollo/queries/account\";\nimport { onboardingAnswersVar } from \"../../../apollo/reactiveVariables/account\";\nimport { USER_TYPE } from \"../../../helper/databaseVariables\";\n\nimport \"./user-type.scss\";\nimport OnboardingTemplate from \"../onboardingTemplate/OnboardingTemplate\";\n\nconst { K12, TRANSFER, PARENT, STAFF, OTHER } = USER_TYPE;\n\nconst UserType = ({ previous, next, flows }) => {\n  const { data: onboardingData } = useQuery(GET_ONBOARDING_ANSWERS);\n  const { onboardingAnswers } = onboardingData;\n  const { preferredName } = onboardingAnswers;\n\n  const {\n    highSchoolFlow,\n    transferFlow,\n    parentFlow,\n    staffFlow,\n    otherFlow,\n  } = flows;\n\n  function handleClick(value) {\n    onboardingAnswersVar({ ...onboardingAnswers, userType: value });\n    console.log(value);\n    console.log(K12);\n\n    switch (value) {\n      case K12.value:\n        next(highSchoolFlow);\n        break;\n      case TRANSFER.value:\n        next(transferFlow);\n        break;\n      case PARENT.value:\n        next(parentFlow);\n        break;\n      case STAFF.value:\n        next(staffFlow);\n        break;\n      case OTHER.value:\n        next(otherFlow);\n        break;\n      default:\n    }\n  }\n\n  function handlePrevious() {\n    const copy = { ...onboardingAnswers };\n    if (copy.userType) delete copy.userType;\n    onboardingAnswersVar(copy);\n    previous();\n  }\n\n  const userTypeButton = ({ display, value }) => (\n    <button\n      key={value}\n      className=\"block-button\"\n      onClick={() => handleClick(value)}\n    >\n      {display}\n    </button>\n  );\n\n  return (\n    <OnboardingTemplate\n      name=\"user-type\"\n      h1Array={[`Thanks ${preferredName}!`, \"So, are you a...?\"]}\n      previousFunc={handlePrevious}\n    >\n      <div>\n        <div className=\"first-row\">\n          {[K12, TRANSFER, PARENT].map((object) => userTypeButton(object))}\n        </div>\n        <div className=\"second-row\">\n          {[STAFF, OTHER].map((object) => userTypeButton(object))}\n        </div>\n      </div>\n    </OnboardingTemplate>\n  );\n};\n\nexport default UserType;\n","import React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\n\nimport Completion from \"./completion/Completion\";\nimport Staff from \"./staff/Staff\";\nimport OtherUser from \"./otherUser/OtherUser\";\nimport Parent from \"./parent/Parent\";\nimport PreferredName from \"./preferredName/PreferredName\";\nimport SkipOnboarding from \"./skipOnboarding/SkipOnboarding\";\nimport Source from \"./source/Source\";\nimport Student from \"./student/Student\";\nimport UserType from \"./userType/UserType\";\n\nimport { GET_ME, GET_ONBOARDING_ANSWERS } from \"../../apollo/queries/account\";\n\nconst highSchoolFlow = {\n  1: \"Which school are you currently enrolled at?\",\n  2: \"What year will you be graduating high school?\",\n  3: \"What is your unweighted GPA?\",\n  4: \"What was your highest SAT score?\",\n  5: \"What was your highest ACT score?\",\n  6: \"What is your family income?\",\n  7: \"What are your preferred pronouns\",\n  8: \"How do you identify yourself?\",\n};\n\nconst transferFlow = {\n  1: \"Which high school did you graduate from?\",\n  2: \"What year did you graduate high school?\",\n  3: \"What is your unweighted GPA?\",\n  4: \"What was your highest SAT score?\",\n  5: \"What was your highest ACT score?\",\n  6: \"What is your family income?\",\n  7: \"What are your preferred pronouns\",\n  8: \"How do you identify yourself?\",\n};\n\nconst parentFlow = {\n  1: \"What school does your child currently attend?\",\n  2: \"When is your child graduating?\",\n};\n\nconst staffFlow = {\n  1: \"What school or district do you work at?\",\n  2: \"What year will your students graduate high school in?\",\n};\n\nconst otherFlow = {\n  1: \"Do you work at an organization that suppors students?\",\n};\n\nconst flow = {\n  1: \"Would you like to proceed or skip onboarding?\",\n  2: \"What is your preferred name?\",\n  3: \"What type of user are you?\",\n  4: { highSchoolFlow, transferFlow, parentFlow, staffFlow },\n  5: \"How did you hear about Tilt?\",\n  6: \"Thank you!\",\n};\n\nconst flows = {\n  highSchoolFlow,\n  transferFlow,\n  parentFlow,\n  staffFlow,\n  otherFlow,\n};\n\nconst userTypes = {\n  HIGH_SCHOOL: \"student\",\n  TRANSFER: \"transfer\",\n  PARENT: \"parent\",\n  STAFF: \"staff\",\n  OTHER: \"other\",\n};\n\nconst Onboarding = () => {\n  const { data: meData, error: meError } = useQuery(GET_ME);\n  const { data: onboardingData } = useQuery(GET_ONBOARDING_ANSWERS);\n  const { onboardingAnswers } = onboardingData;\n\n  const [flowType, setFlowType] = useState(flow);\n  const [flowIndex, setFlowIndex] = useState(1);\n\n  function next(newFlow) {\n    const indexBeforeFork = 3;\n    const indexWhenMerge = 5;\n\n    if (\n      flowType === flow &&\n      (flowIndex < indexBeforeFork || flowIndex >= indexWhenMerge)\n    ) {\n      setFlowIndex((prev) => (prev += 1));\n    }\n    if (flowType === flow && flowIndex === indexBeforeFork) {\n      setFlowType(newFlow);\n      setFlowIndex(1);\n    }\n    if (flowType !== flow && flowIndex < Object.keys(flowType).length) {\n      setFlowIndex((prev) => (prev += 1));\n    }\n    if (flowType !== flow && flowIndex === Object.keys(flowType).length) {\n      setFlowType(flow);\n      setFlowIndex(5);\n    }\n  }\n\n  function previous(newFlow) {\n    const indexBeforeFork = 3;\n    const indexWhenMerge = 5;\n    if (flowType === flow && flowIndex > 0) {\n      setFlowIndex((prev) => (prev -= 1));\n    }\n    if (flowType !== flow && flowIndex > 0) {\n      setFlowIndex((prev) => (prev -= 1));\n    }\n    if (flowType !== flow && flowIndex === 1) {\n      setFlowType(flow);\n      setFlowIndex(indexBeforeFork);\n    }\n    if (flowType === flow && flowIndex === indexWhenMerge) {\n      setFlowType(newFlow);\n      setFlowIndex(Object.keys(newFlow).length);\n    }\n  }\n\n  const props = {\n    me: meData?.me,\n    next,\n    previous,\n    flowIndex,\n  };\n\n  return (\n    <div className=\"authentication-container onboarding-container\">\n      <div className=\"authentication-left\"></div>\n      <div className=\"authentication-right\">\n        {flowType[flowIndex] === flow[1] && <SkipOnboarding {...props} />}\n        {flowType[flowIndex] === flow[2] && <PreferredName {...props} />}\n        {flowType[flowIndex] === flow[3] && (\n          <UserType {...props} flows={flows} userTypes={userTypes} />\n        )}\n        {/* fork */}\n        {flowType === highSchoolFlow && <Student highSchool {...props} />}\n        {flowType === transferFlow && <Student transfer {...props} />}\n        {flowType === parentFlow && <Parent {...props} />}\n        {flowType === staffFlow && <Staff {...props} />}\n        {flowType === otherFlow && <OtherUser {...props} />}\n        {/* merge */}\n        {flowType[flowIndex] === flow[5] && (\n          <Source {...props} flows={flows} userTypes={userTypes} />\n        )}\n        {flowType[flowIndex] === flow[6] && <Completion {...props} />}\n      </div>\n      {/* <div style={{ position: \"absolute\" }}>\n        <ul>\n          {Object.entries(onboardingAnswers).length > 0 &&\n            Object.entries(onboardingAnswers).map(([key, value]) => (\n              <li key={`${key}:${value}`}>{`${key}:${value}`}</li>\n            ))}\n        </ul>\n      </div> */}\n    </div>\n  );\n};\n\nexport default Onboarding;\n"],"sourceRoot":""}