# Pull base image
FROM python:3.8

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# Set working directory
ENV APP_HOME=/app
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
WORKDIR $APP_HOME

# Create the app user
RUN addgroup --system app && adduser --system --group app

# Install Python dependencies
COPY Pipfile Pipfile.lock /app/
RUN pip install pipenv && pipenv install --system

# Add the rest of the code
COPY . /app/

# SECRET_KEY is only included here to avoid raising an error when generating static files.
# Be sure to add a real SECRET_KEY config variable in deployment.
RUN SECRET_KEY=somethingsupersecret \
  python manage.py collectstatic --noinput

# Chown all the files to the app user
RUN chown -R app:app $APP_HOME

# Change to the app user
USER app

# Run entrypoint.sh that verifies that Postgres is healthy before applying the migrations
ENTRYPOINT ["/app/entrypoint.prod.sh"]
