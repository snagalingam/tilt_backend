# Generated by Django 3.1.1 on 2020-12-24 15:16

from django.db import migrations, models
import django.db.models.deletion
import django_better_admin_arrayfield.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Budget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_study', models.IntegerField(blank=True, null=True)),
                ('job', models.IntegerField(blank=True, null=True)),
                ('savings', models.IntegerField(blank=True, null=True)),
                ('family', models.IntegerField(blank=True, null=True)),
                ('other_scholarships', models.IntegerField(blank=True, null=True)),
                ('loan_subsidized', models.IntegerField(blank=True, null=True)),
                ('loan_unsubsidized', models.IntegerField(blank=True, null=True)),
                ('loan_plus', models.IntegerField(blank=True, null=True)),
                ('loan_private', models.IntegerField(blank=True, null=True)),
                ('loan_school', models.IntegerField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name': 'budget',
                'verbose_name_plural': 'budgets',
            },
        ),
        migrations.CreateModel(
            name='College',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_id', models.IntegerField(blank=True, null=True)),
                ('ope_id', models.CharField(blank=True, max_length=255)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('popularity_score', models.IntegerField(blank=True, default=0, null=True)),
                ('place_id', models.CharField(blank=True, max_length=255)),
                ('business_status', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=255)),
                ('phone_number', models.CharField(blank=True, max_length=255, null=True)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lng', models.FloatField(blank=True, null=True)),
                ('url', models.TextField(blank=True, null=True)),
                ('website', models.TextField(blank=True, null=True)),
                ('types', django_better_admin_arrayfield.models.fields.ArrayField(base_field=models.CharField(blank=True, max_length=255, null=True), blank=True, default=None, null=True, size=None)),
                ('main_photo', models.TextField(blank=True, null=True)),
                ('photos', django_better_admin_arrayfield.models.fields.ArrayField(base_field=models.TextField(blank=True, null=True), blank=True, default=None, null=True, size=None)),
                ('favicon', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Scorecard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_id', models.IntegerField(blank=True, null=True)),
                ('ope_id', models.CharField(blank=True, max_length=255)),
                ('ope6_id', models.CharField(blank=True, max_length=255)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(blank=True, max_length=255)),
                ('state', models.CharField(blank=True, max_length=255)),
                ('zipcode', models.CharField(blank=True, max_length=255)),
                ('accreditor', models.CharField(blank=True, max_length=255)),
                ('school_url', models.CharField(blank=True, max_length=255)),
                ('price_calculator_url', models.CharField(blank=True, max_length=255, null=True)),
                ('predominant_degree_awarded_recoded', models.CharField(blank=True, max_length=255, null=True)),
                ('under_investigation', models.BooleanField(blank=True, default=False, null=True)),
                ('main_campus', models.BooleanField(blank=True, default=False, null=True)),
                ('branches', models.IntegerField(blank=True, null=True)),
                ('predominant_degree_awarded', models.CharField(blank=True, max_length=255, null=True)),
                ('highest_degree_awarded', models.CharField(blank=True, max_length=255)),
                ('ownership', models.CharField(blank=True, max_length=255)),
                ('state_fips', models.CharField(blank=True, max_length=255)),
                ('region', models.CharField(blank=True, max_length=255)),
                ('locale', models.CharField(blank=True, max_length=255)),
                ('locale_updated', models.CharField(blank=True, max_length=255)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('carnegie_basic', models.CharField(blank=True, max_length=255)),
                ('carnegie_undergrad', models.CharField(blank=True, max_length=255)),
                ('carnegie_size_setting', models.CharField(blank=True, max_length=255)),
                ('carnegie_size_setting_size', models.CharField(blank=True, max_length=255)),
                ('carnegie_size_setting_residential', models.CharField(blank=True, max_length=255)),
                ('minority_serving_historically_black', models.BooleanField(blank=True, default=False, null=True)),
                ('minority_serving_predominantly_black', models.BooleanField(blank=True, default=False, null=True)),
                ('minority_serving_annh', models.BooleanField(blank=True, default=False, null=True)),
                ('minority_serving_tribal', models.BooleanField(blank=True, default=False, null=True)),
                ('minority_serving_aanipi', models.BooleanField(blank=True, default=False, null=True)),
                ('minority_serving_hispanic', models.BooleanField(blank=True, default=False, null=True)),
                ('minority_serving_nant', models.BooleanField(blank=True, default=False, null=True)),
                ('men_only', models.BooleanField(blank=True, default=False, null=True)),
                ('women_only', models.BooleanField(blank=True, default=False, null=True)),
                ('religious_affiliation', models.CharField(blank=True, max_length=255, null=True)),
                ('admissions_rate', models.FloatField(blank=True, null=True)),
                ('sat_reading_25th_percentile', models.FloatField(blank=True, null=True)),
                ('sat_reading_75th_percentile', models.FloatField(blank=True, null=True)),
                ('sat_math_25th_percentile', models.FloatField(blank=True, null=True)),
                ('sat_math_75th_percentile', models.FloatField(blank=True, null=True)),
                ('sat_writing_25th_percentile', models.FloatField(blank=True, null=True)),
                ('sat_writing_75th_percentile', models.FloatField(blank=True, null=True)),
                ('sat_reading_midpoint', models.FloatField(blank=True, null=True)),
                ('sat_math_midpoint', models.FloatField(blank=True, null=True)),
                ('sat_writing_midpoint', models.FloatField(blank=True, null=True)),
                ('act_cumulative_25th_percentile', models.FloatField(blank=True, null=True)),
                ('act_cumulative_75th_percentile', models.FloatField(blank=True, null=True)),
                ('act_english_25th_percentile', models.FloatField(blank=True, null=True)),
                ('act_english_75th_percentile', models.FloatField(blank=True, null=True)),
                ('act_math_25th_percentile', models.FloatField(blank=True, null=True)),
                ('act_math_75th_percentile', models.FloatField(blank=True, null=True)),
                ('act_writing_25th_percentile', models.FloatField(blank=True, null=True)),
                ('act_writing_75th_percentile', models.FloatField(blank=True, null=True)),
                ('act_cumulative_midpoint', models.FloatField(blank=True, null=True)),
                ('act_english_midpoint', models.FloatField(blank=True, null=True)),
                ('act_math_midpoint', models.FloatField(blank=True, null=True)),
                ('act_writing_midpoint', models.FloatField(blank=True, null=True)),
                ('sat_average', models.FloatField(blank=True, null=True)),
                ('online_only', models.BooleanField(blank=True, default=False, null=True)),
                ('undergraduate_students', models.FloatField(blank=True, null=True)),
                ('undergraduate_students_white', models.FloatField(blank=True, null=True)),
                ('undergraduate_students_black', models.FloatField(blank=True, null=True)),
                ('undergraduate_students_hispanic', models.FloatField(blank=True, null=True)),
                ('undergraduate_students_asian', models.FloatField(blank=True, null=True)),
                ('undergraduate_students_aian', models.FloatField(blank=True, null=True)),
                ('undergraduate_students_nhpi', models.FloatField(blank=True, null=True)),
                ('undergraduate_students_2ormore', models.FloatField(blank=True, null=True)),
                ('undergraduate_students_nra', models.FloatField(blank=True, null=True)),
                ('undergraduate_students_unknown', models.FloatField(blank=True, null=True)),
                ('undergraduate_students_parttime', models.FloatField(blank=True, null=True)),
                ('operating', models.BooleanField(blank=True, default=False, null=True)),
                ('avg_net_price', models.IntegerField(blank=True, null=True)),
                ('avg_net_price_lo', models.IntegerField(blank=True, null=True)),
                ('avg_net_price_m1', models.IntegerField(blank=True, null=True)),
                ('avg_net_price_m2', models.IntegerField(blank=True, null=True)),
                ('avg_net_price_h1', models.IntegerField(blank=True, null=True)),
                ('avg_net_price_h2', models.IntegerField(blank=True, null=True)),
                ('cost_of_attendance', models.IntegerField(blank=True, null=True)),
                ('tuition_in_state', models.IntegerField(blank=True, null=True)),
                ('tuition_out_of_state', models.IntegerField(blank=True, null=True)),
                ('tuition_program_year', models.IntegerField(blank=True, null=True)),
                ('pell_grant_rate', models.FloatField(blank=True, null=True)),
                ('federal_loan_rate', models.FloatField(blank=True, null=True)),
                ('share_25_older', models.FloatField(blank=True, null=True)),
                ('default_rate_2yr', models.FloatField(blank=True, null=True)),
                ('default_rate_3yr', models.FloatField(blank=True, null=True)),
                ('median_debt', models.FloatField(blank=True, null=True)),
                ('median_debt_completers', models.FloatField(blank=True, null=True)),
                ('median_debt_noncompleters', models.FloatField(blank=True, null=True)),
                ('median_debt_num_students', models.IntegerField(blank=True, null=True)),
                ('median_debt_completers_num_students', models.IntegerField(blank=True, null=True)),
                ('median_debt_noncompleters_num_students', models.IntegerField(blank=True, null=True)),
                ('monthly_loan_payments', models.FloatField(blank=True, null=True)),
                ('students_with_any_loan', models.FloatField(blank=True, null=True)),
                ('students_with_pell_grant', models.FloatField(blank=True, null=True)),
                ('age_entry', models.IntegerField(blank=True, null=True)),
                ('veteran', models.FloatField(blank=True, null=True)),
                ('first_generation', models.FloatField(blank=True, null=True)),
                ('alias', models.TextField(blank=True)),
                ('graduation_rate_100', models.FloatField(blank=True, null=True)),
                ('graduation_rate_100_num_students', models.IntegerField(blank=True, null=True)),
                ('institutional_level', models.CharField(blank=True, max_length=255, null=True)),
                ('undergraduate_students_men', models.FloatField(blank=True, null=True)),
                ('undergraduate_students_women', models.FloatField(blank=True, null=True)),
                ('default_rate_2yr_num_students', models.IntegerField(blank=True, null=True)),
                ('default_rate_3yr_num_students', models.IntegerField(blank=True, null=True)),
                ('open_admissions', models.BooleanField(blank=True, default=False, null=True)),
                ('graduation_rate_150', models.FloatField(blank=True, null=True)),
                ('first_time_full_time', models.FloatField(blank=True, null=True)),
                ('graduation_rate_150_white', models.FloatField(blank=True, null=True)),
                ('graduation_rate_150_black', models.FloatField(blank=True, null=True)),
                ('graduation_rate_150_hispanic', models.FloatField(blank=True, null=True)),
                ('graduation_rate_150_asian', models.FloatField(blank=True, null=True)),
                ('graduation_rate_150_aian', models.FloatField(blank=True, null=True)),
                ('graduation_rate_150_nhpi', models.FloatField(blank=True, null=True)),
                ('graduate_rate_150_2ormore', models.FloatField(blank=True, null=True)),
                ('graduate_rate_150_nra', models.FloatField(blank=True, null=True)),
                ('graduate_rate_150_unknown', models.FloatField(blank=True, null=True)),
                ('graduation_rate_150_white_num_students', models.IntegerField(blank=True, null=True)),
                ('graduation_rate_150_black_num_students', models.IntegerField(blank=True, null=True)),
                ('graduation_rate_150_hispanic_num_students', models.IntegerField(blank=True, null=True)),
                ('graduation_rate_150_asian_num_students', models.IntegerField(blank=True, null=True)),
                ('graduation_rate_150_aian_num_students', models.IntegerField(blank=True, null=True)),
                ('graduation_rate_150_nhpi_num_students', models.IntegerField(blank=True, null=True)),
                ('graduate_rate_150_2ormore_num_students', models.IntegerField(blank=True, null=True)),
                ('graduate_rate_150_nra_num_students', models.IntegerField(blank=True, null=True)),
                ('graduate_rate_150_unknown_num_students', models.IntegerField(blank=True, null=True)),
                ('first_time_full_time_pell_grant_rate', models.FloatField(blank=True, null=True)),
                ('first_time_full_time_federal_loan_rate', models.FloatField(blank=True, null=True)),
                ('first_time_full_time_num_students', models.FloatField(blank=True, null=True)),
                ('graduation_rate_200', models.FloatField(blank=True, null=True)),
                ('retention_rate_full_time', models.FloatField(blank=True, null=True)),
                ('retention_rate_part_time', models.FloatField(blank=True, null=True)),
                ('program_percentage_education', models.FloatField(blank=True, null=True)),
                ('program_percentage_mathematics', models.FloatField(blank=True, null=True)),
                ('program_percentage_business_marketing', models.FloatField(blank=True, null=True)),
                ('program_percentage_communications_technology', models.FloatField(blank=True, null=True)),
                ('program_percentage_language', models.FloatField(blank=True, null=True)),
                ('program_percentage_visual_performing', models.FloatField(blank=True, null=True)),
                ('program_percentage_engineering_technology', models.FloatField(blank=True, null=True)),
                ('program_percentage_parks_recreation_fitness', models.FloatField(blank=True, null=True)),
                ('program_percentage_agriculture', models.FloatField(blank=True, null=True)),
                ('program_percentage_security_law_enforcement', models.FloatField(blank=True, null=True)),
                ('program_percentage_computer', models.FloatField(blank=True, null=True)),
                ('program_percentage_precision_production', models.FloatField(blank=True, null=True)),
                ('program_percentage_humanities', models.FloatField(blank=True, null=True)),
                ('program_percentage_library', models.FloatField(blank=True, null=True)),
                ('program_percentage_psychology', models.FloatField(blank=True, null=True)),
                ('program_percentage_social_science', models.FloatField(blank=True, null=True)),
                ('program_percentage_legal', models.FloatField(blank=True, null=True)),
                ('program_percentage_english', models.FloatField(blank=True, null=True)),
                ('program_percentage_construction', models.FloatField(blank=True, null=True)),
                ('program_percentage_military', models.FloatField(blank=True, null=True)),
                ('program_percentage_communication', models.FloatField(blank=True, null=True)),
                ('program_percentage_public_administration_social_service', models.FloatField(blank=True, null=True)),
                ('program_percentage_architecture', models.FloatField(blank=True, null=True)),
                ('program_percentage_ethnic_cultural_gender', models.FloatField(blank=True, null=True)),
                ('program_percentage_resources', models.FloatField(blank=True, null=True)),
                ('program_percentage_health', models.FloatField(blank=True, null=True)),
                ('program_percentage_engineering', models.FloatField(blank=True, null=True)),
                ('program_percentage_history', models.FloatField(blank=True, null=True)),
                ('program_percentage_theology_religious_vocation', models.FloatField(blank=True, null=True)),
                ('program_percentage_transportation', models.FloatField(blank=True, null=True)),
                ('program_percentage_physical_science', models.FloatField(blank=True, null=True)),
                ('program_percentage_science_technology', models.FloatField(blank=True, null=True)),
                ('program_percentage_biological', models.FloatField(blank=True, null=True)),
                ('program_percentage_family_consumer_science', models.FloatField(blank=True, null=True)),
                ('program_percentage_philosophy_religious', models.FloatField(blank=True, null=True)),
                ('program_percentage_personal_culinary', models.FloatField(blank=True, null=True)),
                ('program_percentage_multidiscipline', models.FloatField(blank=True, null=True)),
                ('program_percentage_mechanic_repair_technology', models.FloatField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('college', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='college.college')),
            ],
            options={
                'verbose_name': 'scorecard',
                'verbose_name_plural': 'scorecards',
            },
        ),
        migrations.CreateModel(
            name='FieldOfStudy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cip_code', models.CharField(blank=True, max_length=255)),
                ('cip_title', models.CharField(blank=True, max_length=255)),
                ('credential_level', models.CharField(blank=True, max_length=255)),
                ('credential_title', models.CharField(blank=True, max_length=255)),
                ('num_students_debt', models.IntegerField(blank=True, null=True)),
                ('median_debt', models.IntegerField(blank=True, null=True)),
                ('monthly_debt_payment', models.IntegerField(blank=True, null=True)),
                ('mean_debt', models.IntegerField(blank=True, null=True)),
                ('num_students_titleiv', models.IntegerField(blank=True, null=True)),
                ('num_students_earnings', models.IntegerField(blank=True, null=True)),
                ('median_earnings', models.IntegerField(blank=True, null=True)),
                ('num_students_ipeds_awards1', models.IntegerField(blank=True, null=True)),
                ('num_students_ipeds_awards2', models.IntegerField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('college', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='college.college')),
            ],
            options={
                'verbose_name': 'field of study',
                'verbose_name_plural': 'fields of study',
            },
        ),
        migrations.CreateModel(
            name='CollegeStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, max_length=255)),
                ('net_price', models.IntegerField(blank=True, null=True)),
                ('award_uploaded', models.BooleanField(default=False)),
                ('award_reviewed', models.BooleanField(default=False)),
                ('user_notified', models.BooleanField(default=False)),
                ('residency', models.CharField(blank=True, max_length=255)),
                ('in_state_tuition', models.CharField(blank=True, max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('college', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='college.college')),
            ],
            options={
                'verbose_name': 'college status',
                'verbose_name_plural': 'college status',
            },
        ),
    ]
